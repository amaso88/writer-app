{"version":3,"sources":["logo.svg","config/history.js","shared/error/error-boundary.js","shared/error/error-boundary-route.js","config/routes-constants.js","shared/firebase/db-constants.js","shared/firebase/firebase-manager.js","shared/context/auth-manager.js","shared/context/index.js","shared/session/withAuthorization.js","modules/layouts/autocomplete/creatable.js","modules/layouts/autocomplete/select.js","modules/layouts/autocomplete/index.js","modules/layouts/loading/index.js","modules/general/report/product-by-user.js","modules/layouts/tabs/tab-header.js","modules/layouts/tabs/index.js","modules/general/report/product-line-by-user.js","modules/general/report/brands-by-user.js","modules/general/home/index.js","shared/error/page-not-found.js","shared/session/auth-data.js","modules/general/login/index.js","shared/util/link-utils.js","modules/admin/company-management/company-management.js","modules/admin/company-management/company-management-form.js","modules/admin/company-management/company-management-create.js","modules/admin/company-management/company-management-view.js","modules/admin/company-management/company-management-edit.js","modules/admin/company-management/company-management-delete.js","modules/admin/company-management/index.js","modules/admin/product-line-management/product-line-management.js","shared/util/string-utils.js","modules/admin/product-line-management/product-line-management-form.js","modules/admin/product-line-management/product-line-management-create.js","modules/admin/product-line-management/product-line-management-view.js","modules/admin/product-line-management/product-line-management-edit.js","modules/admin/product-line-management/product-line-management-delete.js","modules/admin/product-line-management/index.js","modules/layouts/paginator/index.js","modules/layouts/paginator/cursor.js","modules/admin/brand-management/brand-management.js","modules/admin/brand-management/brand-management-form.js","modules/admin/brand-management/brand-management-create.js","modules/admin/brand-management/brand-management-view.js","modules/admin/brand-management/brand-management-edit.js","modules/admin/brand-management/brand-management-delete.js","modules/admin/brand-management/index.js","modules/admin/product/product-management-data.js","modules/admin/product/product-management.js","modules/admin/product/product-management-form.js","modules/admin/product/product-management-create.js","modules/admin/product/product-management-view.js","modules/admin/product/product-management-edit.js","modules/admin/product/product-management-delete.js","modules/layouts/ckeditor/index.js","modules/admin/product/product-management-html.js","modules/admin/product/index.js","routes.js","modules/layouts/header/index.js","modules/layouts/footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","ErrorBoundary","state","error","undefined","errorInfo","this","setState","errorDetails","className","toString","componentStack","props","children","React","Component","ErrorBoundaryRoute","component","rest","Error","path","render","ROUTES_CONSTANTS","HOME","AUTH","LOGIN","COMPANY","index","create","view","uid","edit","delete","PRODUCT_LINE","BRAND","PRODUCT","html","DB_CONSTANTS","getAll","getOne","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","loginWithGoogle","auth","signInWithPopup","googleProvider","logout","signOut","users","db","ref","user","companies","company","productLines","productLine","brands","brand","products","product","app","initializeApp","database","GoogleAuthProvider","AuthManager","setUser","isAuthenticated","SettingContext","createContext","displayName","SettingProvider","firebase","Provider","value","withSetting","Consumer","context","withAuthorization","condition","WithAuthorization","onAuthStateChanged","console","log","history","push","CreatableWidget","isLoading","options","handleChange","newValue","actionMeta","isClearable","isMulti","onChange","onCreateOption","length","SelectWidget","nextProps","nextState","AutoComplete","isCreatable","selectedOptions","checkIfSelectedOptionsChange","i","nextSelected","iquals","j","stateSelected","defaultValue","prepareOptions","map","option","label","defaultLabel","selectedOption","handleCreate","inputValue","Loading","Spinner","animation","role","variant","ProductByUser","changeProductHandler","userUid","userName","getProducts","userId","orderByChild","equalTo","on","snapshot","itemsObject","val","itemsList","Object","keys","key","loading","items","getItems","off","Container","Row","Col","md","username","Button","onClick","Table","striped","bordered","hover","item","code","name","shortDescription","largeDescription","productLineName","brandName","TabHeader","e","preventDefault","activeTab","NavItem","NavLink","active","to","TabsWidget","onClickTabItem","tab","Nav","child","style","paddingTop","ProductLineByUser","description","BrandsByUser","HomePage","authUser","PageNotFound","isAdmin","email","ROLES","ADMIN","WRITTER","LoginPage","then","socialAuthUser","userTemp","roles","set","catch","Alert","color","Card","border","width","CardImg","src","logo","CardBody","CardTitle","handleLink","goBack","BrandManagement","ButtonGroup","aria-label","CompanyManagementForm","wordCount","changeHandler","event","targetName","target","targetValue","texto","replace","split","handleSubmit","saveEntity","title","Form","noValidate","onSubmit","validated","htmlFor","type","CompanyManagementCreate","CompanyManagementView","getItem","match","params","id","once","ListGroup","ListGroupItem","CompanyManagementEdit","CompanyManagementDelete","remove","Modal","show","onHide","ModalHeader","closeButton","ModalBody","ModalFooter","CompanyRoutes","url","CompanyManagement","ProductLineManagement","getWordCount","word","ProductLineManagementForm","ProductLineManagementCreate","createdBy","ProductLineManagementView","ProductLineManagementEdit","ProductLineManagementDelete","ProductLinesRoutes","PaginatorWidget","totalPages","updateActivePage","currentPage","onPageChanged","firtPage","previousPage","current","nextPage","lastPage","showFirstButton","showPrevButton","showNextButton","showLastButton","itemsToDisplay","renderItem","icon","text","isShowing","outline","rounded","size","disabled","Math","ceil","Number","total","itemsPerPage","Pagination","Cursor","baseRef","pageSize","lastKey","lastValue","startAt","limitToFirst","snap","data","forEach","ss","shift","last","endAt","limitToLast","pop","handlePagination","activePage","isForward","pagination","sortEntities","moveForward","moveBackward","cursor","next","previous","sort","order","BrandManagementForm","BrandManagementCreate","created","moment","now","updated","BrandManagementView","BrandManagementEdit","BrandManagementDelete","BrandRoutes","ProductManagementData","ProductManagement","ProductManagementForm","htmlDescription","productLineUID","brandUID","wordCountShortDescription","wordCountLargeDescription","changeProductLineHandler","changeBrandHandler","lg","ProductManagementCreate","getProductLines","Promise","resolve","reject","getBrands","ProductManagementView","ProductManagementEdit","getProduct","ProductManagementDelete","CKEditorWidget","evt","newContent","editor","getData","content","short","large","activeClass","events","change","ProductManagementHtml","saveHtmlContent","ProductRoutes","Routes","exact","Home","Header","toggle","bind","isOpen","homeRoute","companiesRoute","productLinesRoute","brandRoute","productRoute","Navbar","fixed","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","App","componentDidMount","forceUpdate","logoutWithGoogle","fluid","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b829d08b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory()\r\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component{\r\n   state = { error: undefined, errorInfo: undefined };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error,\r\n      errorInfo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorInfo } = this.state;\r\n    if (errorInfo) {\r\n      const errorDetails =\r\n         ( \r\n\t\t\t\t\t<details className=\"preserve-space\"> \r\n\t\t\t\t\t\t{error && error.toString()} \r\n\t\t\t\t\t\t<br /> \r\n\t\t\t\t\t\t{errorInfo.componentStack}\r\n\t\t\t\t\t</details>\r\n        )\r\n      return (\r\n        <div>\r\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\r\n          {errorDetails}\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport ErrorBoundary from './error-boundary';\r\n\r\n\r\nexport const ErrorBoundaryRoute = ({ component: Component, ...rest }) => {\r\n  const encloseInErrorBoundary = props => (\r\n    <ErrorBoundary>\r\n      <Component {...props} />\r\n    </ErrorBoundary>\r\n  );\r\n\r\n  if (!Component) throw new Error(`A component needs to be specified for path ${(rest).path}`);\r\n\r\n  return <Route {...rest} render={encloseInErrorBoundary} />;\r\n};\r\n\r\nexport default ErrorBoundaryRoute;\r\n","export const ROUTES_CONSTANTS = {\r\n  HOME: \"/\",\r\n  AUTH: {\r\n    LOGIN: \"/login\"\r\n  },\r\n  COMPANY: {\r\n    index: () => '/company',\r\n    create: () => '/company/create',\r\n    view: uid => `/company/view/${uid}`,\r\n    edit: uid => `/company/edit/${uid}`,\r\n    delete: uid => `/company/delete/${uid}`,\r\n  },\r\n  PRODUCT_LINE: {\r\n    index: () => '/product_line',\r\n    create: () => '/product_line/create',\r\n    view: uid => `/product_line/view/${uid}`,\r\n    edit: uid => `/product_line/edit/${uid}`,\r\n    delete: uid => `/product_line/delete/${uid}`,\r\n  },\r\n  BRAND: {\r\n    index: () => '/brand',\r\n    create: () => '/brand/create',\r\n    view: uid => `/brand/view/${uid}`,\r\n    edit: uid => `/brand/edit/${uid}`,\r\n    delete: uid => `/brand/delete/${uid}`,\r\n  },\r\n  PRODUCT: {\r\n    index: () => '/product',\r\n    create: () => '/product/create',\r\n    view: uid => `/product/view/${uid}`,\r\n    edit: uid => `/product/edit/${uid}`,\r\n    delete: uid => `/product/delete/${uid}`,\r\n    html: uid => `/product/html/${uid}`,\r\n  } \r\n};\r\n","\r\nexport const DB_CONSTANTS = {\r\n\tCOMPANY : {\r\n\t\tgetAll: () => 'companies',\r\n\t\tgetOne: uid => `companies/${uid}`\r\n\t},\r\n\tPRODUCT_LINE : {\r\n\t\tgetAll: () => 'product_lines',\r\n\t\tgetOne: uid => `product_lines/${uid}`\r\n\t},\r\n\tBRAND : {\r\n\t\tgetAll: () => 'brands',\r\n\t\tgetOne: uid => `brands/${uid}`\r\n\t},\r\n\tPRODUCT : {\r\n\t\tgetAll: () => 'products',\r\n\t\tgetOne: uid => `products/${uid}`\r\n\t},\r\n\tUSER : {\r\n\t\tgetAll: () => 'users',\r\n\t\tgetOne: uid => `users/${uid}`\r\n\t}\r\n}","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport { DB_CONSTANTS } from \"./db-constants\";\r\n\r\nconst fbConfig = {\r\n  apiKey: \"AIzaSyDInxcKjFND6CPzzrqfpDUJwfBgFHAPJJU\",\r\n  authDomain: \"writter-app-management.firebaseapp.com\",\r\n  databaseURL: \"https://writter-app-management.firebaseio.com\",\r\n  projectId: \"writter-app-management\",\r\n  storageBucket: \"writter-app-management.appspot.com\",\r\n  messagingSenderId: \"904791426685\",\r\n  appId: \"1:904791426685:web:45c2edf19ecf22bca01314\",\r\n  measurementId: \"G-WR58CXQRLF\"\r\n};\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(fbConfig);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n  }\r\n\r\n  // *** Auth API ***\r\n  loginWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\r\n  logout = () => this.auth.signOut();\r\n\r\n  // *** User API ***\r\n  users = () => this.db.ref(DB_CONSTANTS.USER.getAll());\r\n  user = uid => this.db.ref(DB_CONSTANTS.USER.getOne(uid));\r\n\r\n  // *** Company API ***\r\n  companies = () => this.db.ref(DB_CONSTANTS.COMPANY.getAll());\r\n  company = uid => this.db.ref(DB_CONSTANTS.COMPANY.getOne(uid));\r\n\r\n  // *** Product Lines API ***\r\n  productLines = () => this.db.ref(DB_CONSTANTS.PRODUCT_LINE.getAll());\r\n  productLine = uid => this.db.ref(DB_CONSTANTS.PRODUCT_LINE.getOne(uid));\r\n\r\n  // *** Brand API ***\r\n  brands = () => this.db.ref(DB_CONSTANTS.BRAND.getAll());\r\n  brand = uid => this.db.ref(DB_CONSTANTS.BRAND.getOne(uid));\r\n\r\n  // *** Product API ***\r\n  products = () => this.db.ref(DB_CONSTANTS.PRODUCT.getAll());\r\n  product = uid => this.db.ref(DB_CONSTANTS.PRODUCT.getOne(uid));\r\n}\r\nexport default Firebase;\r\n","class AuthManager {\r\n  constructor() {\r\n    this.user = null;\r\n    this.isAuthenticated = false;\r\n  }\r\n\r\n  setUser = user => {\r\n    if (user !== null) {\r\n      this.isAuthenticated = true;\r\n    } else {\r\n      this.isAuthenticated = false;\r\n    }\r\n    this.user = user;\r\n  };\r\n}\r\n\r\nexport default AuthManager;\r\n","import React, { Component } from \"react\";\r\nimport Firebase from \"../firebase/firebase-manager\";\r\nimport AuthManager from \"./auth-manager\";\r\n\r\n// Crear el context\r\nconst SettingContext = React.createContext();\r\nSettingContext.displayName = 'SettingContext';\r\nexport { SettingContext };\r\n\r\nclass SettingProvider extends Component {\r\n  state = {\r\n\t\tfirebase: new Firebase(),\r\n\t\tauth: new AuthManager(),\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SettingContext.Provider\r\n        value={{\r\n\t\t\t\t\tfirebase: this.state.firebase,\r\n\t\t\t\t\tauth: this.state.auth\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </SettingContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const withSetting = Component => props => (\r\n  <SettingContext.Consumer>\r\n    {context => <Component {...props} context={context} />}\r\n  </SettingContext.Consumer>\r\n);\r\n\r\nexport default SettingProvider;\r\n","import React from \"react\";\r\nimport history from \"../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../config/routes-constants\";\r\nimport { withSetting } from \"../context\";\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.props.context.firebase.auth.onAuthStateChanged(function(user) {\r\n        console.log(user)\r\n        if (user === null || !condition(user)) {\r\n          history.push(ROUTES_CONSTANTS.AUTH.LOGIN);\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      // if (this.props.context.auth.user === null) return null;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  return withSetting(WithAuthorization);\r\n};\r\nexport default withAuthorization;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nexport default class CreatableWidget extends Component {\r\n\tstatic propTypes = {\r\n\t\toptions: PropTypes.array.isRequired,\r\n\t\thandleChange: PropTypes.func.isRequired,\r\n\t\tonCreateOption: PropTypes.func.isRequired,\r\n\t}\r\n\r\n\tstate = {\r\n\t\tisLoading: false,\r\n\t\toptions: this.props.options,\r\n\t\t// value: [],\r\n\t};\r\n\r\n\thandleChange = (newValue, actionMeta) => {\r\n\t\t// this.setState({ value: newValue });\r\n\t\tthis.props.handleChange( newValue, actionMeta);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<CreatableSelect\r\n\t\t\t\tisClearable\r\n\t\t\t\tisMulti={this.props.isMulti}\r\n\t\t\t\t// isDisabled={isLoading}\r\n\t\t\t\t// isLoading={isLoading}\r\n\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\tonCreateOption={this.props.onCreateOption}\r\n\t\t\t\toptions={this.props.options}\r\n\t\t\t\tvalue={this.props.value && this.props.value.length > 0 ? this.props.value : [] }\r\n\t\t\t\tclassName='text-dark multi-select-options'\r\n\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Select from 'react-select';\r\n\r\nexport default class SelectWidget extends Component {\r\n\tstatic propTypes = {\r\n\t\toptions: PropTypes.array.isRequired,\r\n\t\thandleChange: PropTypes.func.isRequired,\r\n\t\tvalue: PropTypes.array.isRequired,\r\n\t}\r\n\t\r\n\tstate = {\r\n\t\tisLoading: false,\r\n\t\toptions: this.props.options,\r\n\t\t// value: [],\r\n\t};\r\n\r\n\t// componentDidMount() {\r\n\t// \tconsole.log(this.props.value);\r\n\t// }\r\n\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\thandleChange = (newValue, actionMeta) => {\r\n\t\t// this.setState({ value: newValue });\r\n\t\tthis.props.handleChange( newValue, actionMeta);\r\n\t};\r\n\r\n\trender() {\t\t\r\n\t\treturn (\r\n\t\t\t<Select\r\n\t\t\t\tisClearable\r\n\t\t\t\tisMulti={this.props.isMulti}\r\n\t\t\t\t// isDisabled={isLoading}\r\n\t\t\t\t// isLoading={isLoading}\r\n\t\t\t\tonChange={this.handleChange}\t\t\t\t\r\n\t\t\t\toptions={this.props.options}\r\n\t\t\t\tvalue={this.props.value && this.props.value.length > 0 ? this.props.value : [] }\r\n\t\t\t\tclassName='text-dark multi-select-options'\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CreatableWidget from \"./creatable\";\r\nimport SelectWidget from \"./select\";\r\n\r\nexport default class AutoComplete extends Component {\r\n  static propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    selectedOptions: PropTypes.array,\r\n    defaultLabel: PropTypes.string.isRequired,\r\n    defaultValue: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    isCreatable: PropTypes.bool\r\n  };\r\n\r\n  state = {\r\n    isLoading: false,\r\n    isCreatable: false,\r\n    options: [],\r\n    selectedOptions: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.prepareOptions();\r\n  }\r\n\r\n  checkIfSelectedOptionsChange = nextProps => {\r\n    if (\r\n      nextProps.selectedOptions &&\r\n      this.state.selectedOptions.length !== nextProps.selectedOptions.length\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    for (let i = 0; i < nextProps.selectedOptions.length; i++) {\r\n      const nextSelected = nextProps.selectedOptions[i];\r\n      let iquals = false;\r\n      for (let j = 0; j < this.state.selectedOptions.length; j++) {\r\n        const stateSelected = this.state.selectedOptions[j];\r\n        if (nextSelected[this.props.defaultValue] == stateSelected.value) {\r\n          iquals = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!iquals) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      (nextProps.options &&\r\n        this.state.options.length !== nextProps.options.length) ||\r\n      this.checkIfSelectedOptionsChange(nextProps)\r\n    ) {\r\n      this.prepareOptions();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  prepareOptions = () => {\r\n    // this.setState({\r\n    //     ...this.state,\r\n    //     isLoading: true,\r\n    // })\r\n\r\n    // console.log(this.props.selectedOptions);\r\n\r\n    let options = this.props.options.map(option => {\r\n      return {\r\n        label: option[this.props.defaultLabel],\r\n        value: option[this.props.defaultValue]\r\n      };\r\n    });\r\n\r\n    let selectedOptions = this.props.selectedOptions.map(selectedOption => {\r\n      return {\r\n        label: selectedOption[this.props.defaultLabel],\r\n        value: selectedOption[this.props.defaultValue]\r\n      };\r\n    });\r\n\r\n    // console.log(\"this.props.selectedOptions\");\r\n    // console.log(this.props.selectedOptions);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      // isLoading: false,\r\n      isCreatable: this.props.isCreatable ? true : false,\r\n      options,\r\n      selectedOptions\r\n    });\r\n  };\r\n\r\n  handleChange = (newValue, actionMeta) => {\r\n    this.props.handleChange(newValue);\r\n  };\r\n\r\n  handleCreate = inputValue => {\r\n    this.props.handleCreate(inputValue);\r\n  };\r\n\r\n  render() {\r\n    const { options, selectedOptions } = this.state;\r\n    return this.props.isCreatable ? (\r\n      <CreatableWidget\r\n        isClearable\r\n        isMulti={this.props.isMulti}\r\n        handleChange={this.handleChange}\r\n        onCreateOption={this.handleCreate}\r\n        options={options}\r\n        className=\"text-dark multi-select-options\"\r\n        value={\r\n          selectedOptions && selectedOptions.length > 0 ? selectedOptions : []\r\n        }\r\n      />\r\n    ) : (\r\n      <SelectWidget\r\n        isClearable\r\n        isMulti={this.props.isMulti}\r\n        handleChange={this.handleChange}\r\n        options={options}\r\n        className=\"text-dark multi-select-options\"\r\n        value={\r\n          selectedOptions && selectedOptions.length > 0 ? selectedOptions : []\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\r\n      Loading...\r\n    </Spinner>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport { Container, Table, Button, Row, Col } from \"reactstrap\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\nimport Loading from \"../../layouts/loading\";\r\n\r\nclass ProductByUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      userUid: null,\r\n      userName: null,\r\n      products: []\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.users;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    this.getItems().on(\"value\", snapshot => {\r\n      const itemsObject = snapshot.val();\r\n      const itemsList = itemsObject\r\n        ? Object.keys(itemsObject).map(key => ({\r\n            ...itemsObject[key],\r\n            uid: key\r\n          }))\r\n        : [];\r\n      this.setState({\r\n        ...this.state,\r\n        items: itemsList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.getItems().off();\r\n  }\r\n\r\n  changeProductHandler = value => {\r\n    this.setState({\r\n      ...this.state,\r\n      userUid: value ? value.value : \"\",\r\n      userName: value ? value.label : \"\"\r\n    });\r\n  };\r\n\r\n  getProducts = userId => {\r\n    if (!userId) {\r\n      this.setState({ ...this.state, products: [] });\r\n      return;\r\n    }\r\n    this.props.context.firebase\r\n      .products()\r\n      .orderByChild(\"createdBy\")\r\n      .equalTo(userId)\r\n      .on(\"value\", snapshot => {\r\n        const itemsObject = snapshot.val();\r\n        const itemsList = itemsObject\r\n          ? Object.keys(itemsObject).map(key => ({\r\n              ...itemsObject[key],\r\n              uid: key\r\n            }))\r\n          : [];\r\n        console.log(itemsList);\r\n        this.setState({ ...this.state, products: itemsList });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.loading && <Loading />}\r\n        <h2> Seleccione un usuario</h2>\r\n        <Row>\r\n          {this.state.items && this.state.items.length > 0 && (\r\n            <>\r\n              <Col md=\"8\">\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={this.state.items}\r\n                  defaultLabel=\"username\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeProductHandler}\r\n                  selectedOptions={\r\n                    this.state.userUid\r\n                      ? [\r\n                          {\r\n                            uid: this.state.userUid,\r\n                            username: this.state.userName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <Button\r\n                  className=\"btn-view\"\r\n                  onClick={() => {\r\n                    this.getProducts(this.state.userUid);\r\n                  }}\r\n                >\r\n                  Ver\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <h2 className=\"pt-5\">Productos</h2>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table striped bordered hover>\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>C&oacute;digo</th>\r\n                  <th>Nombre</th>\r\n                  <th>Descripci&oacute;n corta</th>\r\n                  <th>Descripci&oacute;n Larga</th>\r\n                  <th>Linea</th>\r\n                  <th>Marca</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.products.length > 0 &&\r\n                  this.state.products.map((item, i) => (\r\n                    <tr key={item.uid}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{item.code}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.shortDescription}</td>\r\n                      <td>{item.largeDescription}</td>\r\n                      <td>{item.productLineName}</td>\r\n                      <td>{item.brandName}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductByUser);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavItem, NavLink } from \"reactstrap\";\r\n\r\nclass TabHeader extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n  };\r\n\r\n  onClick = e => {\r\n    e.preventDefault();\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: { activeTab, label }\r\n    } = this;\r\n\r\n    let className = \"tab-list-item\";\r\n\r\n    if (activeTab === label) {\r\n      className += \" tab-list-active\";\r\n    }\r\n\r\n    return (\r\n      <NavItem>\r\n        <NavLink\r\n          active={activeTab === label}\r\n          to=\"#\"\r\n          className={className}\r\n          onClick={onClick}\r\n        >\r\n          {label}\r\n        </NavLink>\r\n      </NavItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabHeader;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TabHeader from \"./tab-header\";\r\nimport { Nav } from \"reactstrap\";\r\n\r\nclass TabsWidget extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeTab: props.children[0].props.label\r\n    };\r\n  }\r\n\r\n  onClickTabItem = tab => {\r\n    this.setState({ activeTab: tab });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: { children },\r\n      state: { activeTab }\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"tabs\">\r\n        <Nav className=\"nav-tabs mt-5 nav-fill\">\r\n          {children.map(child => {\r\n            const { label } = child.props;\r\n\r\n            return (\r\n              <TabHeader\r\n                activeTab={activeTab}\r\n                key={label}\r\n                label={label}\r\n                onClick={onClickTabItem}\r\n              />\r\n            );\r\n          })}\r\n        </Nav>\r\n        <div style={{ paddingTop: \"20px\" }} className=\"container-fluid\">\r\n          {children.map(child => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabsWidget;\r\n","import React, { Component } from \"react\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport { Container, Table, Button, Row, Col } from \"reactstrap\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\nimport Loading from \"../../layouts/loading\";\r\n\r\nclass ProductLineByUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      userUid: null,\r\n      userName: null,\r\n      products: []\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.users;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    this.getItems().on(\"value\", snapshot => {\r\n      const itemsObject = snapshot.val();\r\n      const itemsList = itemsObject\r\n        ? Object.keys(itemsObject).map(key => ({\r\n            ...itemsObject[key],\r\n            uid: key\r\n          }))\r\n        : [];\r\n      this.setState({\r\n        ...this.state,\r\n        items: itemsList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.getItems().off();\r\n  }\r\n\r\n  changeProductHandler = value => {\r\n    this.setState({\r\n      ...this.state,\r\n      userUid: value ? value.value : \"\",\r\n      userName: value ? value.label : \"\"\r\n    });\r\n  };\r\n\r\n  getProducts = userId => {\r\n    if (!userId) {\r\n      this.setState({ ...this.state, products: [] });\r\n      return;\r\n    }\r\n    this.props.context.firebase\r\n      .productLines()\r\n      .orderByChild(\"createdBy\")\r\n      .equalTo(userId)\r\n      .on(\"value\", snapshot => {\r\n        const itemsObject = snapshot.val();\r\n        const itemsList = itemsObject\r\n          ? Object.keys(itemsObject).map(key => ({\r\n              ...itemsObject[key],\r\n              uid: key\r\n            }))\r\n          : [];\r\n        console.log(itemsList);\r\n        this.setState({ ...this.state, products: itemsList });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.loading && <Loading />}\r\n        <h2> Seleccione un usuario</h2>\r\n        <Row>\r\n          {this.state.items && this.state.items.length > 0 && (\r\n            <>\r\n              <Col md=\"8\">\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={this.state.items}\r\n                  defaultLabel=\"username\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeProductHandler}\r\n                  selectedOptions={\r\n                    this.state.userUid\r\n                      ? [\r\n                          {\r\n                            uid: this.state.userUid,\r\n                            username: this.state.userName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <Button\r\n                  className=\"btn-view\"\r\n                  onClick={() => {\r\n                    this.getProducts(this.state.userUid);\r\n                  }}\r\n                >\r\n                  Ver\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <h2 className=\"pt-5\">Lineas de Productos</h2>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table striped bordered hover>\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Nombre</th>\r\n                  <th>Descripci&oacute;n</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.products.length > 0 &&\r\n                  this.state.products.map((item, i) => (\r\n                    <tr key={item.uid}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.description}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineByUser);\r\n","import React, { Component } from \"react\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport { Container, Table, Button, Row, Col } from \"reactstrap\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\nimport Loading from \"../../layouts/loading\";\r\n\r\nclass BrandsByUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      userUid: null,\r\n      userName: null,\r\n      products: []\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.users;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    this.getItems().on(\"value\", snapshot => {\r\n      const itemsObject = snapshot.val();\r\n      const itemsList = itemsObject\r\n        ? Object.keys(itemsObject).map(key => ({\r\n            ...itemsObject[key],\r\n            uid: key\r\n          }))\r\n        : [];\r\n      this.setState({\r\n        ...this.state,\r\n        items: itemsList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.getItems().off();\r\n  }\r\n\r\n  changeProductHandler = value => {\r\n    this.setState({\r\n      ...this.state,\r\n      userUid: value ? value.value : \"\",\r\n      userName: value ? value.label : \"\"\r\n    });\r\n  };\r\n\r\n  getProducts = userId => {\r\n    if (!userId) {\r\n      this.setState({ ...this.state, products: [] });\r\n      return;\r\n    }\r\n    this.props.context.firebase\r\n      .brands()\r\n      .orderByChild(\"createdBy\")\r\n      .equalTo(userId)\r\n      .on(\"value\", snapshot => {\r\n        const itemsObject = snapshot.val();\r\n        const itemsList = itemsObject\r\n          ? Object.keys(itemsObject).map(key => ({\r\n              ...itemsObject[key],\r\n              uid: key\r\n            }))\r\n          : [];\r\n        console.log(itemsList);\r\n        this.setState({ ...this.state, products: itemsList });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.loading && <Loading />}\r\n        <h2> Seleccione un usuario</h2>\r\n        <Row>\r\n          {this.state.items && this.state.items.length > 0 && (\r\n            <>\r\n              <Col md=\"8\">\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={this.state.items}\r\n                  defaultLabel=\"username\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeProductHandler}\r\n                  selectedOptions={\r\n                    this.state.userUid\r\n                      ? [\r\n                          {\r\n                            uid: this.state.userUid,\r\n                            username: this.state.userName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <Button\r\n                  className=\"btn-view\"\r\n                  onClick={() => {\r\n                    this.getProducts(this.state.userUid);\r\n                  }}\r\n                >\r\n                  Ver\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <h2 className=\"pt-5\">Marcas</h2>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table striped bordered hover>\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Nombre</th>\r\n                  <th>Descripci&oacute;n</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.products.length > 0 &&\r\n                  this.state.products.map((item, i) => (\r\n                    <tr key={item.uid}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.description}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandsByUser);\r\n","import React, { Component } from \"react\";\r\nimport withAuthorization from \"../../../shared/session/withAuthorization\";\r\nimport { Container } from \"reactstrap\";\r\nimport ProductByUser from \"../report/product-by-user\";\r\nimport TabsWidget from \"../../layouts/tabs\";\r\nimport ProductLineByUser from \"../report/product-line-by-user\";\r\nimport BrandsByUser from \"../report/brands-by-user\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <TabsWidget>\r\n          <div label=\"Productos por usuario\">\r\n            <ProductByUser />\r\n          </div>\r\n          <div label=\"Lineas por usuario\">\r\n            <ProductLineByUser />\r\n          </div>\r\n          <div label=\"Marcas por usuario\">\r\n            <BrandsByUser />\r\n          </div>\r\n        </TabsWidget>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(HomePage);\r\n","import React from 'react';\r\n//import { Alert } from 'reactstrap';\r\n\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>\r\n          The page does not exist.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageNotFound;","\r\nexport const isAdmin = email => {\r\n\tif( email && email === 'cabrerarobles@gmail.com') {\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport const ROLES = {\r\n\tADMIN: 'admin',\r\n\tWRITTER: 'writter'\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  Row,\r\n  Alert\r\n} from \"reactstrap\";\r\n\r\nimport logo from \"../../../logo.svg\";\r\nimport { isAdmin, ROLES } from \"../../../shared/session/auth-data\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    error: null,\r\n  }\r\n\r\n  loginWithGoogle = () => {\r\n    this.props.context.firebase\r\n      .loginWithGoogle()\r\n      .then(socialAuthUser => {\r\n        const userTemp = {\r\n          username: socialAuthUser.user.displayName,\r\n          email: socialAuthUser.user.email,\r\n          roles: isAdmin(socialAuthUser.user.email)\r\n            ? ROLES.ADMIN\r\n            : ROLES.WRITTER\r\n        };\r\n        this.props.context.auth.setUser(userTemp);\r\n        return this.props.context.firebase\r\n          .user(socialAuthUser.user.uid)\r\n          .set(userTemp);\r\n      })\r\n      .then(() => {\r\n        history.push(ROUTES_CONSTANTS.HOME);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        \r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-md-center pt-5\">\r\n          <Alert color=\"danger\">This is a danger alert — check it out!</Alert>\r\n          <Card border=\"default\" style={{ width: \"18rem\" }}>\r\n            <CardImg variant=\"top\" src={logo} />\r\n            <CardBody className=\"justify-content-center\">\r\n              <CardTitle className=\"text-center\">\r\n                Autenticaci&oacute;n\r\n              </CardTitle>\r\n              <Button className=\"btn-login\" onClick={this.loginWithGoogle}>\r\n                Login With Google\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(LoginPage);\r\n","import history from \"../../config/history\";\r\n\r\n/**\r\n * Funcion para cambiar de ruta.\r\n * @param {String} path Ruta\r\n */\r\nexport const handleLink = (e, path) => {\r\n\te.preventDefault();\r\n\thistory.push(path);\r\n}\r\n\r\nexport const goBack = e => {\r\n\tif(e) e.preventDefault();\r\n\thistory.goBack();\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Row,\r\n  ButtonGroup\r\n} from \"reactstrap\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport '../../../index.css'\r\n\r\nclass BrandManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {}\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.companies;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.getItems().on(\"value\", snapshot => {\r\n      const itemsObject = snapshot.val();\r\n      const itemsList = itemsObject\r\n        ? Object.keys(itemsObject).map(key => ({\r\n            ...itemsObject[key],\r\n            uid: key\r\n          }))\r\n        : [];\r\n      this.setState({\r\n        items: itemsList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.getItems().off();\r\n  }\r\n\r\n  render() {\r\n    const { items, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5\">Compa&ntilde;ias</h2>\r\n        {loading && <Loading />}\r\n        <Row className=\"justify-content-end pb-1\">\r\n            <Button className=\"btn-created\"\r\n              onClick={e => handleLink(e, ROUTES_CONSTANTS.COMPANY.create())}\r\n            >\r\n              Crear\r\n            </Button>\r\n        </Row>\r\n        <div className=\"table-responsive\">\r\n            <Table striped bordered hover>\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Nombre</th>\r\n                  <th>Descripci&oacute;n</th>\r\n                  <th>Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {items.length > 0 &&\r\n                  items.map((item, i) => (\r\n                    <tr key={item.uid}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.description}</td>\r\n                      <td className=\"row-table-actions text-center\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                          <Button\r\n                            className=\"btn-view\"\r\n                            onClick={e =>\r\n                              handleLink(e, ROUTES_CONSTANTS.COMPANY.view(item.uid))\r\n                            }\r\n                          >\r\n                            View\r\n                          </Button>\r\n                          <Button\r\n                            className=\"btn-edit\"\r\n                            onClick={e =>\r\n                              handleLink(e, ROUTES_CONSTANTS.COMPANY.edit(item.uid))\r\n                            }\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button\r\n                            className=\"btn-delete\"\r\n                            onClick={e =>\r\n                              handleLink(\r\n                                e,\r\n                                ROUTES_CONSTANTS.COMPANY.delete(item.uid)\r\n                              )\r\n                            }\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagement);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Container, Button, Row, Col } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\n\r\nexport default class CompanyManagementForm extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    saveEntity: PropTypes.func.isRequired,\r\n    item: PropTypes.object\r\n  };\r\n\r\n  state = {\r\n    item: {\r\n      name: \"\",\r\n      description: \"\"\r\n    },\r\n    wordCount: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n    if (item) {\r\n      this.setState({ item });\r\n    }\r\n  }\r\n\r\n  changeHandler = event => {\r\n    let targetName = event.target.name;\r\n    let targetValue = event.target.value;\r\n    let wordCount = this.state.wordCount;\r\n\r\n    if (targetName === \"description\") {\r\n      let texto = targetValue;\r\n      let primerBlanco = /^ /;\r\n      let ultimoBlanco = / $/;\r\n      let variosBlancos = /[ ]+/g;\r\n      texto = texto.replace(variosBlancos, \" \");\r\n      texto = texto.replace(primerBlanco, \"\");\r\n      texto = texto.replace(ultimoBlanco, \"\");\r\n      wordCount = texto.split(\" \").length;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        [targetName]: targetValue\r\n      },\r\n      wordCount\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // event.target.className = \"needs-validation\";\r\n    this.props.saveEntity(this.state.item);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5 pb-2\">{this.props.title}</h2>\r\n        <Form noValidate onSubmit={this.handleSubmit} validated={false} className=\"pt-2 pb-5\">\r\n            <Row>\r\n              <Col md=\"10\" className=\"btn-back-container\">\r\n                    <Button onClick={e => goBack(e)} className=\"btn-back\">Back</Button>\r\n              </Col>\r\n              <Col md=\"10\" className=\"form-group\">\r\n                <label htmlFor=\"name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={this.state.item.name}\r\n                  onChange={this.changeHandler}\r\n                />\r\n              </Col>\r\n              <Col md=\"10\" className=\"form-group\">\r\n                <label htmlFor=\"description\">Descripci&oacute;n</label>\r\n                <textarea\r\n                  className=\"form-control text-dark\"\r\n                  name=\"description\"\r\n                  value={this.state.item.description}\r\n                  onChange={this.changeHandler}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  Palabras: {this.state.wordCount}\r\n                </small>\r\n              </Col>\r\n            </Row>\r\n          <div className=\"btn-success-container\">\r\n            <Button type=\"submit\" className=\"btn-save btn-success\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport CompanyManagementForm from \"./company-management-form\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass CompanyManagementCreate extends Component {\r\n  saveEntity = item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    // Get a key for a new Post.\r\n    var uid = firebase.companies().push().key;\r\n\r\n    firebase.company(uid).set(item, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        history.push(ROUTES_CONSTANTS.COMPANY.index());\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CompanyManagementForm title={\"Crear Compania\"} saveEntity={this.saveEntity} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(CompanyManagementCreate);\r\n","import React, {Component} from \"react\";\r\nimport {Container, ListGroup, ListGroupItem, Button, Row, Col} from \"reactstrap\";\r\nimport {goBack} from \"../../../shared/util/link-utils\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport {withSetting} from \"../../../shared/context\";\r\n\r\nclass CompanyManagementView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            item: null\r\n        };\r\n\r\n        this.getItem = this.props.context.firebase.company;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        let uid = this.props.match.params.id;\r\n        this.getItem(uid)\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n                const item = snapshot.val();\r\n                this.setState({\r\n                    item,\r\n                    loading: false\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {item, loading} = this.state;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col md=\"10\">\r\n                        <h2 className=\"pt-5 pb-2\">Ver Compania</h2>\r\n                    </Col>\r\n                    <Col md=\"10\" className=\"btn-loading mb-1\">\r\n                        {loading && <Loading/>}\r\n                        <Button onClick={e => goBack(e)} className=\"btn-back\">Atras</Button>\r\n                    </Col>\r\n                    <Col md=\"10\">\r\n                        <ListGroup>\r\n                            <ListGroupItem className=\"d-flex justify-content-between\">\r\n                    <span>\r\n                      <strong>Nombre:</strong>\r\n                    </span>\r\n                                {item && item.name}\r\n                            </ListGroupItem>\r\n                            <ListGroupItem className=\"d-flex justify-content-between\">\r\n                    <span>\r\n                      <strong>Descripci&oacute;n:</strong>\r\n                    </span>\r\n                                {item && item.description}\r\n                            </ListGroupItem>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withSetting(CompanyManagementView);\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport CompanyManagementForm from \"./company-management-form\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass CompanyManagementEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n\r\n    this.getItem = this.props.context.firebase.company;\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n    this.getItem(uid)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const item = snapshot.val();\r\n        this.setState({\r\n          item,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  saveEntity = item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    firebase.company(uid).set(item, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        history.push(ROUTES_CONSTANTS.COMPANY.index());\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <CompanyManagementForm\r\n        title={\"Actualizar compania\"}\r\n        saveEntity={this.saveEntity}\r\n        item={this.state.item}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(CompanyManagementEdit);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass CompanyManagementDelete extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    firebase.company(uid).remove(error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        console.log(\"eliminado correctamente!!!\");\r\n        history.push(ROUTES_CONSTANTS.COMPANY.index());\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Modal show={true} onHide={e => goBack(e)}>\r\n        <ModalHeader closeButton>\r\n          Eliminar!!!\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          Estas seguro que deseas eliminar este elemento?{\" \"}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Eliminar\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(CompanyManagementDelete);\r\n","import React from 'react'\r\nimport { Switch  } from 'react-router-dom';\r\nimport ErrorBoundaryRoute from '../../../shared/error/error-boundary-route';\r\nimport CompanyManagement from './company-management';\r\nimport CompanyManagementCreate from \"./company-management-create\";\r\nimport CompanyManagementView from \"./company-management-view\";\r\nimport CompanyManagementEdit from \"./company-management-edit\";\r\nimport CompanyManagementDelete from \"./company-management-delete\";\r\n\r\nexport default function CompanyRoutes({match}) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Switch>\r\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/edit/:id`} component={CompanyManagementEdit} />\r\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/create`} component={CompanyManagementCreate} />\r\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/view/:id`} component={CompanyManagementView} />\r\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}`} component={CompanyManagement} />\r\n\t\t\t</Switch>\r\n\t\t\t<ErrorBoundaryRoute path={`${match.url}/delete/:id`} component={CompanyManagementDelete} />\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Row,\r\n  ButtonGroup\r\n} from \"reactstrap\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductLineManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {}\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.productLines;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.getItems().on(\"value\", snapshot => {\r\n      const itemsObject = snapshot.val();\r\n      const itemsList = itemsObject\r\n        ? Object.keys(itemsObject).map(key => ({\r\n            ...itemsObject[key],\r\n            uid: key\r\n          }))\r\n        : [];\r\n      this.setState({\r\n        items: itemsList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.getItems().off();\r\n  }\r\n\r\n  render() {\r\n    const { items, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5\">Lineas de productos</h2>\r\n        {loading && <Loading />}\r\n\r\n        <Row className=\"justify-content-end pb-1\">\r\n            <Button\r\n              className=\"btn-created\"\r\n              onClick={e =>\r\n                handleLink(e, ROUTES_CONSTANTS.PRODUCT_LINE.create())\r\n              }\r\n            >\r\n              Crear\r\n            </Button>\r\n        </Row>\r\n        <div className=\"table-responsive\">\r\n          <Table striped bordered hover>\r\n            <thead className=\"table-head\">\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Nombre</th>\r\n                <th>Descripci&oacute;n</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.length > 0 &&\r\n                items.map((item, i) => (\r\n                  <tr key={item.uid}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.description}</td>\r\n                    <td className=\"row-table-actions text-center\">\r\n                      <ButtonGroup aria-label=\"Basic example\">\r\n                        <Button\r\n                          className=\"btn-view\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.PRODUCT_LINE.view(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          View\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-edit\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.PRODUCT_LINE.edit(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-delete\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.PRODUCT_LINE.delete(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineManagement);\r\n","export const getWordCount = word => {\r\n  let texto = word;\r\n  let primerBlanco = /^ /;\r\n  let ultimoBlanco = / $/;\r\n  let variosBlancos = /[ ]+/g;\r\n  texto = texto.replace(variosBlancos, \" \");\r\n  texto = texto.replace(primerBlanco, \"\");\r\n  texto = texto.replace(ultimoBlanco, \"\");\r\n  return texto.split(\" \").length;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Row, Col, Container, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport { getWordCount } from \"../../../shared/util/string-utils\";\r\n\r\nexport default class ProductLineManagementForm extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    saveEntity: PropTypes.func.isRequired,\r\n    item: PropTypes.object\r\n  };\r\n\r\n  state = {\r\n    item: {\r\n      name: \"\",\r\n      description: \"\"\r\n    },\r\n    wordCount: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n    if (item) {\r\n      let wordCount = this.state.wordCount;\r\n      if (item.description) { \r\n        let texto = item.description;\r\n        wordCount = getWordCount(texto)\r\n      }\r\n      this.setState({ item, wordCount });\r\n    }\r\n  }\r\n\r\n  changeHandler = event => {\r\n    let targetName = event.target.name;\r\n    let targetValue = event.target.value;\r\n    let wordCount = this.state.wordCount;\r\n    \r\n    if (targetName === \"description\") { \r\n      \r\n      let texto = targetValue;\r\n      wordCount = getWordCount(texto)\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        [targetName]: targetValue\r\n      },\r\n      wordCount\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // event.target.className = \"needs-validation\";\r\n    this.props.saveEntity(this.state.item);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5 pb-2\">{this.props.title}</h2>\r\n        <Form noValidate onSubmit={this.handleSubmit} validated={false} className=\"pt-2 pb-5\">\r\n          <Row>\r\n              <Col md=\"10\" className=\"btn-back-container\">\r\n                  <Button onClick={e => goBack(e)} className=\"btn-back\">Back</Button>\r\n              </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"name\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={this.state.item.name}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"description\">Descripcion</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={this.state.item.description}\r\n                onChange={this.changeHandler}\r\n              />\r\n              <small className=\"form-text text-muted\">\r\n                Palabras: {this.state.wordCount}\r\n              </small>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"btn-success-container\">\r\n             <Button type=\"submit\" className=\"btn-save btn-success\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ProductLineManagementForm from \"./product-line-management-form\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductLineManagementCreate extends Component {\r\n  saveEntity = item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    // Get a key for a new Post.\r\n    var uid = firebase.productLines().push().key;\r\n\r\n    item.createdBy = this.props.context.auth.user.uid;\r\n\r\n    firebase.productLine(uid).set(item, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        history.push(ROUTES_CONSTANTS.PRODUCT_LINE.index());\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ProductLineManagementForm\r\n        title={\"Crear linea de productos\"}\r\n        saveEntity={this.saveEntity}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineManagementCreate);\r\n","import React, { Component } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem, Button, Row, Col } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductLineManagementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n\r\n    this.getItem = this.props.context.firebase.productLine;\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n    this.getItem(uid)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const item = snapshot.val();\r\n        this.setState({\r\n          item,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    return (\r\n      <Container>\r\n          <Row>\r\n              <Col md=\"10\">\r\n                  <h2 className=\"pt-5 pb-2\">Ver linea de productos</h2>\r\n              </Col>\r\n            <Col md=\"10\" className=\"btn-loading mb-1\">\r\n              {loading && <Loading />}\r\n              <Button onClick={e => goBack(e)} className=\"btn-back\">Back</Button>\r\n            </Col>\r\n            <Col md=\"10\">\r\n              <ListGroup>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Nombre:</strong>\r\n                  </span>\r\n                  {item && item.name}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Descripci&oacute;n:</strong>\r\n                  </span>\r\n                  {item && item.description}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineManagementView);\r\n","import React, { Component } from \"react\";\r\nimport ProductLineManagementForm from \"./product-line-management-form\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductLineManagementEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n\r\n    this.getItem = this.props.context.firebase.productLine;\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n    this.getItem(uid)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const item = snapshot.val();\r\n        this.setState({\r\n          item,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  saveEntity = item => {\r\n\t\tconst { firebase } = this.props.context;\r\n\t\t\r\n    let uid = this.props.match.params.id;\r\n\r\n    firebase.productLine(uid).set(item, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        history.push(ROUTES_CONSTANTS.PRODUCT_LINE.index());\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <ProductLineManagementForm\r\n        title={\"Actualizar linea de productos\"}\r\n        saveEntity={this.saveEntity}\r\n        item={this.state.item}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineManagementEdit);\r\n","import React, { Component } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap'\r\nimport { goBack } from '../../../shared/util/link-utils'\r\nimport history from '../../../config/history';\r\nimport { ROUTES_CONSTANTS } from '../../../config/routes-constants';\r\nimport { withSetting } from '../../../shared/context';\r\n\r\nclass ProductLineManagementDelete extends Component {\r\n\thandleSubmit = e => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props.context;\r\n\t\t\r\n    let uid = this.props.match.params.id;\r\n\r\n    firebase.productLine(uid).remove(error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n\t\t\t\tconsole.log('eliminado correctamente!!!')\r\n        history.push(ROUTES_CONSTANTS.PRODUCT_LINE.index());\r\n      }\r\n    });\r\n  }\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal show={true} onHide={e => goBack(e)}>\r\n        <ModalHeader closeButton>\r\n          Modal heading\r\n        </ModalHeader>\r\n        <ModalBody>Estas seguro que deseas eliminar este elemento? </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Eliminar\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withSetting( ProductLineManagementDelete)","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ErrorBoundaryRoute from \"../../../shared/error/error-boundary-route\";\r\nimport ProductLineManagement from \"./product-line-management\";\r\nimport ProductLineManagementCreate from \"./product-line-management-create\";\r\nimport ProductLineManagementView from \"./product-line-management-view\";\r\nimport ProductLineManagementEdit from \"./product-line-management-edit\";\r\nimport ProductLineManagementDelete from \"./product-line-management-delete\";\r\n\r\nexport default function ProductLinesRoutes({ match }) {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/edit/:id`}\r\n          component={ProductLineManagementEdit}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/create`}\r\n          component={ProductLineManagementCreate}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/view/:id`}\r\n          component={ProductLineManagementView}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}`}\r\n          component={ProductLineManagement}\r\n        />\r\n      </Switch>\r\n      <ErrorBoundaryRoute\r\n        path={`${match.url}/delete/:id`}\r\n        component={ProductLineManagementDelete}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Pagination } from \"reactstrap\";\r\n\r\nclass PaginatorWidget extends Component {\r\n  static propTypes = {\r\n    total: PropTypes.number.isRequired,\r\n    current: PropTypes.number.isRequired,\r\n    itemsPerPage: PropTypes.number.isRequired,\r\n    onPageChanged: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    totalPages: 0\r\n    // currentPage: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      totalPages: Math.ceil(Number(this.props.total / this.props.itemsPerPage))\r\n    });\r\n  }\r\n\r\n  updateActivePage = currentPage => {\r\n    // this.setState({ currentPage });\r\n    this.props.onPageChanged(currentPage);\r\n  };\r\n\r\n  firtPage = () => {\r\n    this.updateActivePage(1);\r\n  };\r\n\r\n  previousPage = () => {\r\n    // this.setState({ currentPage: this.state.currentPage - 1 });\r\n    this.updateActivePage(this.props.current - 1);\r\n  };\r\n\r\n  nextPage = () => {\r\n    // this.setState({ currentPage: this.state.currentPage + 1 });\r\n    this.updateActivePage(this.props.current + 1);\r\n  };\r\n\r\n  lastPage = () => {\r\n    this.updateActivePage(this.state.totalPages);\r\n  };\r\n\r\n  showFirstButton = () => {\r\n    if (this.props.current > 2) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  showPrevButton = () => {\r\n    if (this.props.current > 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  showNextButton = () => {\r\n    if (this.props.current < this.state.totalPages - 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  showLastButton = () => {\r\n    if (this.props.current < this.state.totalPages - 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  itemsToDisplay = currentPage => {\r\n    const items = [];\r\n\r\n    for (var i = 0; i < this.state.totalPages; i++) {\r\n      let item = {};\r\n      if (i === currentPage - 1) {\r\n        item.active = true;\r\n      }\r\n\r\n      items.push(item);\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  renderItem = (icon, text, onClick, isShowing) => (\r\n    <Button\r\n      outline\r\n      rounded\r\n      size=\"sm\"\r\n      className=\"px-2\"\r\n      color=\"white\"\r\n      variant=\"info\"\r\n      onClick={onClick}\r\n      disabled={isShowing() ? false : true}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <Pagination aria-label=\"Page navigation example\">\r\n        \r\n        {this.renderItem(\r\n          \"angle-left\",\r\n          \"Prev\",\r\n          this.previousPage,\r\n          this.showPrevButton\r\n        )}\r\n        {/* {this.itemsToDisplay(this.props.current).map( (item, index) => {\r\n\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\treturn this.renderItem(String(index), () => this.updateActivePage(index + 1), () => true )\r\n\t\t\t\t\t})} */}\r\n        {this.renderItem(\r\n          \"angle-right\",\r\n          \"Next\",\r\n          this.nextPage,\r\n          this.showNextButton\r\n        )}\r\n      </Pagination>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaginatorWidget;\r\n","export default class Cursor {\r\n  constructor(baseRef, pageSize) {\r\n    console.log(baseRef);\r\n    this.baseRef = baseRef;\r\n    this.lastKey = null;\r\n    this.lastValue = null;\r\n    this.pageSize = pageSize;\r\n  }\r\n\r\n  next() {\r\n    let ref = this.baseRef;\r\n\r\n    if (this.lastValue !== null) {\r\n      // a previous page has been loaded so get the next one using the previous value/key\r\n      // we have to start from the current cursor so add one to page size\r\n      ref = ref\r\n        .startAt(this.lastValue, this.lastKey)\r\n        .limitToFirst(this.pageSize + 1);\r\n    } else {\r\n      // this is the first page\r\n      ref = ref.limitToFirst(this.pageSize);\r\n    }\r\n\r\n    return ref.once(\"value\").then(snap => {\r\n      console.log(snap.val());\r\n      const keys = [];\r\n      const data = []; // store data in array so it's ordered\r\n\r\n      snap.forEach(ss => {\r\n        data.push({ ...ss.val(), uid: ss.key });\r\n        keys.push(ss.key);\r\n      });\r\n\r\n      if (this.lastValue !== null) {\r\n        // skip the first value, which is actually the cursor\r\n        keys.shift();\r\n        data.shift();\r\n      }\r\n\r\n      // store the last loaded record\r\n      if (data.length) {\r\n        console.log(`antes de setear << ${this.lastValue}`);\r\n        const last = data.length - 1;\r\n        this.lastKey = keys[last];\r\n        this.lastValue = data[last].name;\r\n        console.log(`despues de setear >> ${this.lastValue}`);\r\n      }\r\n\r\n      return data;\r\n    });\r\n  }\r\n\r\n  previous() {\r\n    let ref = this.baseRef;\r\n\r\n    if (this.lastValue !== null) {\r\n      // a previous page has been loaded so get the next one using the previous value/key\r\n      // we have to start from the current cursor so add one to page size\r\n      ref = ref\r\n        .endAt(this.lastValue, this.lastKey)\r\n        .limitToLast(this.pageSize + 1);\r\n    }\r\n\r\n    return ref.once(\"value\").then(snap => {\r\n      const keys = [];\r\n      const data = []; // store data in array so it's ordered\r\n\r\n      snap.forEach(ss => {\r\n        data.push({ ...ss.val(), uid: ss.key });\r\n        keys.push(ss.key);\r\n      });\r\n\r\n      // store the last loaded record\r\n      if (data.length) {\r\n        console.log(`antes de setear ${this.lastValue}`);\r\n        // const last = data.length - 1;\r\n        this.lastKey = keys[0];\r\n        this.lastValue = data[0].name;\r\n        console.log(`despues de setear ${this.lastValue}`);\r\n      }\r\n\r\n      if (this.lastValue !== null) {\r\n        // skip the first value, which is actually the cursor\r\n        keys.pop();\r\n        data.pop();\r\n      }\r\n\r\n      return data;\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Table, Button, Row, ButtonGroup } from \"reactstrap\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport PaginatorWidget from \"../../layouts/paginator\";\r\nimport Cursor from \"../../layouts/paginator/cursor\";\r\n\r\nclass BrandManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      pagination: {\r\n        itemsPerPage: 2,\r\n        total: 5,\r\n        cursor: \"\",\r\n        activePage: 0\r\n      },\r\n      sort: \"id\",\r\n      order: \"asc\"\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.brands;\r\n    this.cursor = new Cursor(this.getItems().orderByChild('name'), this.state.pagination.itemsPerPage)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.moveForward();\r\n  }\r\n\r\n  handlePagination = activePage => {\r\n    let isForward = this.state.pagination.activePage < activePage;\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        pagination: {\r\n          ...this.state.pagination,\r\n          activePage\r\n        }\r\n      },\r\n      () => this.sortEntities( isForward)\r\n    );\r\n  };\r\n\r\n  sortEntities = isForward => {\r\n    if( isForward) {\r\n      this.moveForward();\r\n    } else {\r\n      this.moveBackward();\r\n    }\r\n\r\n  };\r\n\r\n  moveForward = () => {\r\n    this.cursor.next().then( data => {\r\n      // console.log(data)\r\n      this.setState({\r\n        items: data\r\n      })\r\n    })\r\n  };\r\n\r\n  moveBackward = () => {\r\n    this.cursor.previous().then( data => {\r\n      // console.log(data)\r\n      this.setState({\r\n        items: data\r\n      })\r\n    })\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.getItems().off();\r\n  }\r\n\r\n  render() {\r\n    const { items, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5\">Marcas</h2>\r\n        {loading && <Loading />}\r\n\r\n        <Row className=\"justify-content-end pb-1\">\r\n          <Button\r\n            className=\"btn-created\"\r\n            onClick={e => handleLink(e, ROUTES_CONSTANTS.BRAND.create())}\r\n          >\r\n            Crear\r\n          </Button>\r\n        </Row>\r\n        <div className=\"table-responsive\">\r\n          <Table striped bordered hover>\r\n            <thead className=\"table-head\">\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Nombre</th>\r\n                <th>Descripci&oacute;n</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.length > 0 &&\r\n                items.map((item, i) => (\r\n                  <tr key={item.uid}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.description}</td>\r\n                    <td className=\"row-table-actions text-center\">\r\n                      <ButtonGroup aria-label=\"Basic example\">\r\n                        <Button\r\n                          className=\"btn-view\"\r\n                          onClick={e =>\r\n                            handleLink(e, ROUTES_CONSTANTS.BRAND.view(item.uid))\r\n                          }\r\n                        >\r\n                          View\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-edit\"\r\n                          onClick={e =>\r\n                            handleLink(e, ROUTES_CONSTANTS.BRAND.edit(item.uid))\r\n                          }\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-delete\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.BRAND.delete(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          {this.state.pagination.total > 0 && (\r\n            <PaginatorWidget\r\n              total={this.state.pagination.total}\r\n              current={this.state.pagination.activePage}\r\n              itemsPerPage={this.state.pagination.itemsPerPage}\r\n              onPageChanged={this.handlePagination}\r\n            />\r\n          )}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagement);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Row, Col, Container, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\n\r\nexport default class BrandManagementForm extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    saveEntity: PropTypes.func.isRequired,\r\n    item: PropTypes.object\r\n  };\r\n\r\n  state = {\r\n    item: {\r\n      name: \"\",\r\n      description: \"\"\r\n    },\r\n    wordCount: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n    if (item) {\r\n      this.setState({ item });\r\n    }\r\n  }\r\n\r\n  changeHandler = event => {\r\n    let targetName = event.target.name;\r\n    let targetValue = event.target.value;\r\n    let wordCount = this.state.wordCount;\r\n\r\n    if (targetName === \"description\") {\r\n      let texto = targetValue;\r\n      let primerBlanco = /^ /;\r\n      let ultimoBlanco = / $/;\r\n      let variosBlancos = /[ ]+/g;\r\n      texto = texto.replace(variosBlancos, \" \");\r\n      texto = texto.replace(primerBlanco, \"\");\r\n      texto = texto.replace(ultimoBlanco, \"\");\r\n      wordCount = texto.split(\" \").length;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        [targetName]: targetValue\r\n      },\r\n      wordCount\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // event.target.className = \"needs-validation\";\r\n    this.props.saveEntity(this.state.item);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5 pb-2\">{this.props.title}</h2>\r\n        <Form noValidate onSubmit={this.handleSubmit} validated={false} className=\"pt-2 pb-5\">\r\n          <Row>\r\n            <Col md=\"10\" className=\"btn-back-container\">\r\n                  <Button onClick={e => goBack(e)} className=\"btn-back\">Back</Button>\r\n            </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"name\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={this.state.item.name}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"description\">Descripcion</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={this.state.item.description}\r\n                onChange={this.changeHandler}\r\n              />\r\n              <small className=\"form-text text-muted\">\r\n                Palabras: {this.state.wordCount}\r\n              </small>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"btn-success-container\">\r\n              <Button type=\"submit\" className=\"btn-save btn-success\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport BrandManagementForm from \"./brand-management-form\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport moment from \"moment\";\r\n\r\nclass BrandManagementCreate extends Component {\r\n  saveEntity = item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    // Get a key for a new Post.\r\n    var uid = firebase.brands().push().key;\r\n\r\n    item.createdBy = this.props.context.auth.user.uid;\r\n    item.created = moment.now();\r\n    item.updated = moment.now();\r\n\r\n    firebase.brand(uid).set(item, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        history.push(ROUTES_CONSTANTS.BRAND.index());\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrandManagementForm title={\"Crear Marca\"} saveEntity={this.saveEntity} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagementCreate);\r\n","import React, { Component } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem, Button, Row, Col } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass BrandManagementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n\r\n    this.getItem = this.props.context.firebase.brand;\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n    this.getItem(uid)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const item = snapshot.val();\r\n        this.setState({\r\n          item,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    return (\r\n      <Container>\r\n          <Row>\r\n            <Col md=\"10\">\r\n                  <h2 className=\"pt-5 pb-2\">Ver Marca</h2>\r\n            </Col>\r\n            <Col md=\"10\" className=\"btn-loading mb-1\">\r\n                {loading && <Loading />}\r\n                <Button onClick={e => goBack(e)} className=\"btn-back\">Atras</Button>\r\n            </Col>\r\n            <Col md=\"10\">\r\n              <ListGroup>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Nombre:</strong>\r\n                  </span>\r\n                  {item && item.name}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Descripci&oacute;n:</strong>\r\n                  </span>\r\n                  {item && item.description}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagementView);\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport BrandManagementForm from \"./brand-management-form\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport moment from \"moment\";\r\n\r\nclass BrandManagementEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n\r\n    this.getItem = this.props.context.firebase.brand;\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n    this.getItem(uid)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const item = snapshot.val();\r\n        this.setState({\r\n          item,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  saveEntity = item => {\r\n\t\tconst { firebase } = this.props.context;\r\n\t\t\r\n    let uid = this.props.match.params.id;\r\n\r\n    item.created = !item.created ? moment.now() : item.created;\r\n    item.updated = moment.now();\r\n\r\n    firebase.brand(uid).set(item, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        history.push(ROUTES_CONSTANTS.BRAND.index());\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <BrandManagementForm\r\n        title={\"Actualizar marca\"}\r\n        saveEntity={this.saveEntity}\r\n        item={this.state.item}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagementEdit);\r\n","import React, { Component } from \"react\";\r\nimport { Modal,ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass BrandManagementDelete extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    firebase.brand(uid).remove(error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        console.log(\"eliminado correctamente!!!\");\r\n        history.push(ROUTES_CONSTANTS.BRAND.index());\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Modal show={true} onHide={e => goBack(e)}>\r\n        <ModalHeader closeButton>\r\n          Eliminar!!!\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          Estas seguro que deseas eliminar este elemento?{\" \"}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Eliminar\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagementDelete);\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ErrorBoundaryRoute from \"../../../shared/error/error-boundary-route\";\r\nimport BrandManagement from \"./brand-management\";\r\nimport BrandManagementCreate from \"./brand-management-create\";\r\nimport BrandManagementView from \"./brand-management-view\";\r\nimport BrandManagementEdit from \"./brand-management-edit\";\r\nimport BrandManagementDelete from \"./brand-management-delete\";\r\n\r\nexport default function BrandRoutes({ match }) {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/edit/:id`}\r\n          component={BrandManagementEdit}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/create`}\r\n          component={BrandManagementCreate}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/view/:id`}\r\n          component={BrandManagementView}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}`}\r\n          component={BrandManagement}\r\n        />\r\n      </Switch>\r\n      <ErrorBoundaryRoute\r\n        path={`${match.url}/delete/:id`}\r\n        component={BrandManagementDelete}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Row,\r\n  ButtonGroup\r\n} from \"reactstrap\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductManagementData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {}\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.products;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    let userId = this.props.userId;\r\n\r\n    this.getItems().orderByChild(\"createdBy\").equalTo( userId ).on(\"value\", snapshot => {\r\n      const itemsObject = snapshot.val();\r\n      const itemsList = itemsObject\r\n        ? Object.keys(itemsObject).map(key => ({\r\n            ...itemsObject[key],\r\n            uid: key\r\n          }))\r\n        : [];\r\n      this.setState({\r\n        items: itemsList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.getItems().off();\r\n  }\r\n\r\n  render() {\r\n    const { items, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5\">Productos</h2>\r\n        {loading && <Loading />}\r\n\r\n        <Row className=\"justify-content-end pb-1\">\r\n            <Button\r\n              className=\"btn-created\"\r\n              onClick={e => handleLink(e, ROUTES_CONSTANTS.PRODUCT.create())}\r\n            >\r\n              Crear\r\n            </Button>\r\n        </Row>\r\n        <div className=\"table-responsive\">\r\n          <Table striped bordered hover>\r\n            <thead className=\"table-head\">\r\n              <tr>\r\n                <th>#</th>\r\n                <th>C&oacute;digo</th>\r\n                <th>Nombre</th>\r\n                <th>Descripci&oacute;n corta</th>\r\n                <th>Descripci&oacute;n Larga</th>\r\n                <th>Linea</th>\r\n                <th>Marca</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.length > 0 &&\r\n                items.map((item, i) => (\r\n                  <tr key={item.uid}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{item.code}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.shortDescription}</td>\r\n                    <td>{item.largeDescription}</td>\r\n                    <td>{item.productLineName}</td>\r\n                    <td>{item.brandName}</td>\r\n                    <td className=\"row-table-actions text-center\">\r\n                      <ButtonGroup aria-label=\"Basic example\">\r\n                        <Button\r\n                          className=\"btn-view\"\r\n                          onClick={e =>\r\n                            handleLink(e, ROUTES_CONSTANTS.PRODUCT.view(item.uid))\r\n                          }\r\n                        >\r\n                          View\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-edit\"\r\n                          onClick={e =>\r\n                            handleLink(e, ROUTES_CONSTANTS.PRODUCT.edit(item.uid))\r\n                          }\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-delete\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.PRODUCT.delete(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-delete\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.PRODUCT.html(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          Html\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementData);\r\n","import React, { Component } from 'react'\r\nimport ProductManagementData from './product-management-data'\r\nimport { withSetting } from '../../../shared/context';\r\n\r\nclass ProductManagement extends Component {\r\n    render() {\r\n        let userId = this.props.context.auth.user && this.props.context.auth.user.uid;\r\n        return (\r\n            userId && <ProductManagementData userId={userId} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default withSetting(ProductManagement)","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Button, Form, Row, Col } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\nimport { getWordCount } from \"../../../shared/util/string-utils\";\r\n\r\nexport default class ProductManagementForm extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    saveEntity: PropTypes.func.isRequired,\r\n    item: PropTypes.object\r\n  };\r\n\r\n  state = {\r\n    loading: false,\r\n    item: {\r\n      code: \"\",\r\n      name: \"\",\r\n      shortDescription: \"\",\r\n      largeDescription: \"\",\r\n      htmlDescription: \"\",\r\n      productLineUID: \"\",\r\n      productLineName: \"\",\r\n      brandUID: \"\",\r\n      brandName: \"\"\r\n    },\r\n    wordCountShortDescription: 0,\r\n    wordCountLargeDescription: 0,\r\n    active: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n    if (item) {\r\n      let wordCountShortDescription = this.state.wordCountShortDescription;\r\n      let wordCountLargeDescription = this.state.wordCountLargeDescription;\r\n\r\n      if (item.shortDescription) {\r\n        let texto = item.shortDescription;\r\n        wordCountShortDescription = getWordCount(texto);\r\n      }\r\n      if (item.largeDescription) {\r\n        let texto = item.largeDescription;\r\n        wordCountLargeDescription = getWordCount(texto);\r\n      }\r\n      this.setState({\r\n        ...this.state,\r\n        item,\r\n        wordCountShortDescription,\r\n        wordCountLargeDescription\r\n      });\r\n    }\r\n  }\r\n\r\n  changeHandler = event => {\r\n    let targetName = event.target.name;\r\n    let targetValue = event.target.value;\r\n    let wordCountShortDescription = this.state.wordCountShortDescription;\r\n    let wordCountLargeDescription = this.state.wordCountLargeDescription;\r\n\r\n    if (targetName === \"shortDescription\") {\r\n      let texto = targetValue;\r\n      wordCountShortDescription = getWordCount(texto);\r\n    } else if (targetName === \"largeDescription\") {\r\n      let texto = targetValue;\r\n      wordCountLargeDescription = getWordCount(texto);\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        [targetName]: targetValue\r\n      },\r\n      wordCountShortDescription,\r\n      wordCountLargeDescription\r\n    });\r\n  };\r\n\r\n  changeProductLineHandler = value => {\r\n    this.setState({\r\n      item: {\r\n        ...this.state.item,\r\n        productLineUID: value ? value.value : \"\",\r\n        productLineName: value ? value.label : \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  changeBrandHandler = value => {\r\n    this.setState({\r\n      item: {\r\n        ...this.state.item,\r\n        brandUID: value ? value.value : \"\",\r\n        brandName: value ? value.label : \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // event.target.className = \"needs-validation\";\r\n    this.props.saveEntity(this.state.item);\r\n  };\r\n\r\n  render() {\r\n    const { productLines, brands } = this.props;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5 pb-2\">{this.props.title}</h2>\r\n        <Form noValidate onSubmit={this.handleSubmit} validated={false} className=\"pt-2 pb-5\">\r\n          <Row>\r\n            <Col lg=\"10\" className=\"btn-back-container px-0\">\r\n                <Button onClick={e => goBack(e)} className=\"btn-back\">Back</Button>\r\n            </Col>\r\n            <Col md=\"6\" lg=\"5\" className=\"px-sm-0 pl-md-0 pr-md-1 col-info\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">C&oacute;digo</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"code\"\r\n                  value={this.state.item.code}\r\n                  onChange={this.changeHandler}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\" lg=\"5\" className=\"px-sm-0 pl-md-1 pr-md-0 col-info\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={this.state.item.name}\r\n                  onChange={this.changeHandler}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"6\" lg=\"5\" className=\"px-sm-0 pl-md-0 pr-md-1 col-info\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"productLine\">Linea de productos</label>\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={productLines}\r\n                  defaultLabel=\"name\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeProductLineHandler}\r\n                  selectedOptions={\r\n                    this.state.item\r\n                      ? [\r\n                          {\r\n                            uid: this.state.item.productLineUID,\r\n                            name: this.state.item.productLineName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\" lg=\"5\" className=\"px-sm-0 pr-md-0 pl-md-1 col-info\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"marca\">Marca</label>\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={brands}\r\n                  defaultLabel=\"name\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeBrandHandler}\r\n                  selectedOptions={\r\n                    this.state.item\r\n                      ? [\r\n                          {\r\n                            uid: this.state.item.brandUID,\r\n                            name: this.state.item.brandName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n              <Col lg=\"10\" className=\"form-group col-info\">\r\n                <label htmlFor=\"shortDescription\">Descripci&oacute;n corta</label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  name=\"shortDescription\"\r\n                  value={this.state.item.shortDescription}\r\n                  onChange={this.changeHandler}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  Palabras: {this.state.wordCount}\r\n                </small>\r\n              </Col>\r\n              <Col lg=\"10\" className=\"form-group col-info\">\r\n                <label htmlFor=\"description\">Descripci&oacute;n larga</label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  name=\"largeDescription\"\r\n                  value={this.state.item.largeDescription}\r\n                  onChange={this.changeHandler}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  Palabras: {this.state.wordCount}\r\n                </small>\r\n              </Col>\r\n          </Row>\r\n          <div className=\"btn-success-container\">\r\n             <Button type=\"submit\" className=\"btn-save btn-success\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport ProductManagementForm from \"./product-management-form\";\r\nimport history from \"../../../config/history\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport moment from \"moment\";\r\n\r\nclass ProductManagementCreate extends Component {\r\n  state = {\r\n    productLines: [],\r\n    brands: []\r\n  };\r\n\r\n  saveEntity = item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    // Get a key for a new Post.\r\n    var uid = firebase.products().push().key;\r\n    item.created = moment.now();\r\n    item.updated = moment.now();\r\n\r\n    item.createdBy = this.props.context.auth.user.uid;\r\n\r\n    firebase.product(uid).set(item, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        history.push(ROUTES_CONSTANTS.PRODUCT.index());\r\n      }\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const productLines = await this.getProductLines();\r\n    const brands = await this.getBrands();\r\n\r\n    this.setState({ productLines, brands });\r\n  }\r\n\r\n  getProductLines = () => {\r\n    return new Promise((resolve, reject) => {\r\n      this.props.context.firebase.productLines().on(\r\n        \"value\",\r\n        snapshot => {\r\n          const itemsObject = snapshot.val();\r\n          const itemsList = itemsObject\r\n            ? Object.keys(itemsObject).map(key => ({\r\n                ...itemsObject[key],\r\n                uid: key\r\n              }))\r\n            : [];\r\n          resolve(itemsList);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  getBrands = () => {\r\n    return new Promise((resolve, reject) => {\r\n      this.props.context.firebase.brands().on(\r\n        \"value\",\r\n        snapshot => {\r\n          const itemsObject = snapshot.val();\r\n          const itemsList = itemsObject\r\n            ? Object.keys(itemsObject).map(key => ({\r\n                ...itemsObject[key],\r\n                uid: key\r\n              }))\r\n            : [];\r\n          // console.log(itemsList);\r\n          resolve(itemsList);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ProductManagementForm\r\n        title={\"Crear Producto\"}\r\n        saveEntity={this.saveEntity}\r\n        productLines={this.state.productLines}\r\n        brands={this.state.brands}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementCreate);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Button, ListGroup, ListGroupItem, Row, Col } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductManagementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n\r\n    this.getItem = this.props.context.firebase.product;\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n    this.getItem(uid)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const item = snapshot.val();\r\n        this.setState({\r\n          item,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"10\">\r\n            <h2 className=\"pt-5 pb-2\">Ver Producto</h2>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            {loading && <Loading />}\r\n            <Button onClick={e => goBack(e)} className=\"btn-back\">Atras</Button>\r\n          </Col>\r\n          <Col md=\"10\">\r\n              <ListGroup>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Codigo:</strong>\r\n                  </span>\r\n                  {item && item.code}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Nombre:</strong>\r\n                  </span>\r\n                  {item && item.name}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Descripci&oacute;n corta:</strong>\r\n                  </span>\r\n                  {item && item.shortDescription}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Descripci&oacute;n larga:</strong>\r\n                  </span>\r\n                  {item && item.largeDescription}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Linea de producto:</strong>\r\n                  </span>\r\n                  {item && item.productLineName}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Marca:</strong>\r\n                  </span>\r\n                  {item && item.brandName}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementView);\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport ProductManagementForm from \"./product-management-form\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport moment from \"moment\";\r\n\r\nclass ProductManagementEdit extends Component {\r\n  state = {\r\n    productLines: [],\r\n    brands: [],\r\n    product: null\r\n  };\r\n\r\n  saveEntity = item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    item.created = !item.created ? moment.now() : item.created;\r\n    item.updated = moment.now();\r\n\r\n    firebase.product(uid).set(item, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        history.push(ROUTES_CONSTANTS.PRODUCT.index());\r\n      }\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const product = await this.getProduct();\r\n    const productLines = await this.getProductLines();\r\n    const brands = await this.getBrands();\r\n\r\n    this.setState({ productLines, brands, product });\r\n  }\r\n\r\n  getProduct = () => {\r\n    return new Promise((resolve, reject) => {\r\n      let uid = this.props.match.params.id;\r\n      this.props.context.firebase\r\n        .product(uid)\r\n        .once(\"value\")\r\n        .then(snapshot => {\r\n          const item = snapshot.val();\r\n          resolve(item);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  getProductLines = () => {\r\n    return new Promise((resolve, reject) => {\r\n      this.props.context.firebase.productLines().on(\r\n        \"value\",\r\n        snapshot => {\r\n          const itemsObject = snapshot.val();\r\n          const itemsList = itemsObject\r\n            ? Object.keys(itemsObject).map(key => ({\r\n                ...itemsObject[key],\r\n                uid: key\r\n              }))\r\n            : [];\r\n          // console.log(itemsList);\r\n          resolve(itemsList);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  getBrands = () => {\r\n    return new Promise((resolve, reject) => {\r\n      this.props.context.firebase.brands().on(\r\n        \"value\",\r\n        snapshot => {\r\n          const itemsObject = snapshot.val();\r\n          const itemsList = itemsObject\r\n            ? Object.keys(itemsObject).map(key => ({\r\n                ...itemsObject[key],\r\n                uid: key\r\n              }))\r\n            : [];\r\n          // console.log(itemsList);\r\n          resolve(itemsList);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      this.state.product && (\r\n        <ProductManagementForm\r\n          title={\"Actualizar Producto\"}\r\n          saveEntity={this.saveEntity}\r\n          item={this.state.product}\r\n          productLines={this.state.productLines}\r\n          brands={this.state.brands}\r\n        />\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementEdit);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductManagementDelete extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    firebase.product(uid).remove(error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        console.log(\"eliminado correctamente!!!\");\r\n        history.push(ROUTES_CONSTANTS.PRODUCT.index());\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Modal show={true} onHide={e => goBack(e)}>\r\n        <ModalHeader closeButton>\r\n          Eliminar!!!\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          Estas seguro que deseas eliminar este elemento?{\" \"}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Eliminar\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementDelete);\r\n","import React, { Component } from \"react\";\r\nimport CKEditor from \"react-ckeditor-component\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class CKEditorWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    html: PropTypes.string,\r\n    short: PropTypes.string.isRequired,\r\n    large: PropTypes.string.isRequired,\r\n    changeHandler: PropTypes.func.isRequired\r\n  };\r\n\r\n  onChange = evt => {\r\n    // console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({ content: newContent });\r\n    this.props.changeHandler(newContent);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let newContent = \"\";\r\n    if (this.props.html.length > 0) {\r\n      newContent = this.props.html;\r\n    } else {\r\n      newContent = `\r\n    ${this.props.short} <br/>\r\n    ${this.props.large} <br/>   \r\n    `;\r\n    }\r\n\r\n    this.setState(\r\n      { content: newContent },\r\n      this.props.changeHandler(newContent)\r\n    );\r\n  }\r\n\r\n  // onBlur = (evt) => {\r\n  //   console.log(\"onBlur event called with event info: \", evt);\r\n  // }\r\n\r\n  // afterPaste = (evt) => {\r\n  //   console.log(\"afterPaste event called with event info: \", evt);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <CKEditor\r\n        activeClass=\"p10\"\r\n        content={this.state.content}\r\n        events={{\r\n          // blur: this.onBlur,\r\n          // afterPaste: this.afterPaste,\r\n          change: this.onChange\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport CKEditorWidget from \"../../layouts/ckeditor\";\r\nimport moment from \"moment\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\n\r\nclass ProductManagementHtml extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n\r\n    this.getItem = this.props.context.firebase.product;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n    this.getItem(uid)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const item = snapshot.val();\r\n        this.setState({\r\n          item,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler = content => {\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        htmlDescription: content\r\n      }\r\n    });\r\n  };\r\n\r\n  saveHtmlContent = () => {\r\n    const { firebase } = this.props.context;\r\n    const { item } = this.state;\r\n    let uid = this.props.match.params.id;\r\n\r\n    item.updated = moment.now();\r\n\r\n    firebase.product(uid).set(item, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        history.push(ROUTES_CONSTANTS.PRODUCT.index());\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"10\">\r\n            <h2 className=\"pt-5 pb-2\">Ver Producto</h2>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            {loading && <Loading />}\r\n            <Button onClick={e => goBack(e)} className=\"btn-back\">\r\n              Atras\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            <h2>Producto: {item && item.name}</h2>\r\n          </Col>\r\n          <Col md=\"12\">\r\n            {item && (\r\n              <CKEditorWidget\r\n                html={item.htmlDescription}\r\n                short={item.shortDescription}\r\n                large={item.largeDescription}\r\n                changeHandler={this.changeHandler}\r\n              />\r\n            )}\r\n          </Col>\r\n          <Col md=\"10\">\r\n            <Button onClick={this.saveHtmlContent} className=\"btn btn-warning\">\r\n              Guardar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementHtml);\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ErrorBoundaryRoute from \"../../../shared/error/error-boundary-route\";\r\nimport ProductManagement from \"./product-management\";\r\nimport ProductManagementCreate from \"./product-management-create\";\r\nimport ProductManagementView from \"./product-management-view\";\r\nimport ProductManagementEdit from \"./product-management-edit\";\r\nimport ProductManagementDelete from \"./product-management-delete\";\r\nimport ProductManagementHtml from \"./product-management-html\";\r\n\r\nexport default function ProductRoutes({ match }) {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/edit/:id`}\r\n          component={ProductManagementEdit}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/create`}\r\n          component={ProductManagementCreate}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/view/:id`}\r\n          component={ProductManagementView}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/html/:id`}\r\n          component={ProductManagementHtml}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}`}\r\n          component={ProductManagement}\r\n        />\r\n      </Switch>\r\n      <ErrorBoundaryRoute\r\n        path={`${match.url}/delete/:id`}\r\n        component={ProductManagementDelete}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ErrorBoundaryRoute from \"./shared/error/error-boundary-route\";\r\nimport { ROUTES_CONSTANTS } from \"./config/routes-constants\";\r\n\r\nimport Home from \"./modules/general/home\";\r\nimport PageNotFound from \"./shared/error/page-not-found\";\r\nimport LoginPage from \"./modules/general/login\";\r\nimport CompanyRoutes from \"./modules/admin/company-management\";\r\nimport ProductLinesRoutes from \"./modules/admin/product-line-management\";\r\nimport BrandRoutes from \"./modules/admin/brand-management\";\r\nimport ProductRoutes from \"./modules/admin/product\";\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.HOME}\r\n            exact\r\n            component={Home}\r\n          />\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.AUTH.LOGIN}\r\n            component={LoginPage}\r\n          />\r\n\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.COMPANY.index()}\r\n            component={CompanyRoutes}\r\n          />\r\n\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.PRODUCT_LINE.index()}\r\n            component={ProductLinesRoutes}\r\n          />\r\n\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.BRAND.index()}\r\n            component={BrandRoutes}\r\n          />\r\n\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.PRODUCT.index()}\r\n            component={ProductRoutes}\r\n          />\r\n\r\n          <ErrorBoundaryRoute component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavLink,} from \"reactstrap\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport \"../../../index.css\"\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n  render() {\r\n    const { isAuthenticated } = this.props;\r\n    console.log(isAuthenticated)\r\n    if (!isAuthenticated) return null;\r\n    const homeRoute = ROUTES_CONSTANTS.HOME;\r\n    const companiesRoute = ROUTES_CONSTANTS.COMPANY.index();\r\n    const productLinesRoute = ROUTES_CONSTANTS.PRODUCT_LINE.index();\r\n    const brandRoute = ROUTES_CONSTANTS.BRAND.index();\r\n    const productRoute = ROUTES_CONSTANTS.PRODUCT.index();\r\n    return (\r\n      <Navbar fixed=\"top\" className=\"navbar fixed-top bg-white text-dark text-uppercase navbar-home\" expand=\"lg\">\r\n        <NavbarBrand href={homeRoute} onClick={e => handleLink(e, homeRoute)}>\r\n          Writter App Management\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={this.toggle} >\r\n            <div className=\"item-toggler\"/>\r\n            <div className=\"item-toggler\"/>\r\n            <div className=\"item-toggler\"/>\r\n        </NavbarToggler>\r\n        <Collapse id=\"basic-navbar-nav\" isOpen={this.state.isOpen} navbar >\r\n          <Nav className=\"nav-header\" navbar>\r\n            <NavLink href={homeRoute} onClick={e => handleLink(e, homeRoute)}>\r\n              Home\r\n            </NavLink>\r\n            <NavLink\r\n              href={companiesRoute}\r\n              onClick={e => handleLink(e, companiesRoute)}\r\n            >\r\n              Compa&ntilde;ias\r\n            </NavLink>\r\n            <NavLink\r\n              href={productLinesRoute}\r\n              onClick={e => handleLink(e, productLinesRoute)}\r\n            >\r\n              Linea de productos\r\n            </NavLink>\r\n            <NavLink\r\n              href={brandRoute}\r\n              onClick={e => handleLink(e, brandRoute)}\r\n            >\r\n              Marca\r\n            </NavLink>\r\n            <NavLink\r\n              href={productRoute}\r\n              onClick={e => handleLink(e, productRoute)}\r\n            >\r\n              Productos\r\n            </NavLink>\r\n            <NavLink //Poner a la derecha\r\n              href=\"/logout\"\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                this.props.logout();\r\n              }}\r\n            >\r\n              Cerrar sessi&oacute;n\r\n            </NavLink>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport \"../../../index.css\"\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        const {isAuthenticated} = this.props;\r\n        console.log(isAuthenticated)\r\n\r\n        return(\r\n            <div>\r\n                <footer className=\"footer\">\r\n                    <span> WAM © 2020, Writter Application Management </span>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport history from \"./config/history\";\r\nimport Routes from \"./routes\";\r\nimport Header from \"./modules/layouts/header\";\r\nimport Footer from \"./modules/layouts/footer\";\r\nimport { ROUTES_CONSTANTS } from \"./config/routes-constants\";\r\nimport { withSetting } from \"./shared/context\";\r\n//import CKEditorWidget from \"./modules/layouts/ckeditor\";\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.context.firebase.auth.onAuthStateChanged(user => {\r\n      this.props.context.auth.setUser(user);\r\n      this.forceUpdate();\r\n    });\r\n  };\r\n\r\n  logoutWithGoogle = () => {\r\n    this.props.context.firebase\r\n      .logout()\r\n      .then(() => {\r\n        this.props.context.auth.setUser(null);\r\n        history.push(ROUTES_CONSTANTS.AUTH.LOGIN)\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.props.context.auth\r\n    console.log(this.props.context);\r\n    console.log(\"isAuthenticated\");\r\n    console.log(isAuthenticated);\r\n    return (\r\n        <>\r\n          <Container fluid style={{ paddingTop: \"60px\" }} className=\"app\">\r\n            <Router history={history}>\r\n              <>\r\n                <Header\r\n                  isAuthenticated={true}\r\n                  logout={this.logoutWithGoogle}\r\n                />\r\n                <Routes\r\n                  isAuthenticated={isAuthenticated}\r\n                />\r\n              </>\r\n            </Router>\r\n          </Container>\r\n          <Footer isAuthenticated={true} logout={this.logoutWithGoogle}/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport SettingProvider from \"./shared/context\";\r\n\r\n// import Firebase, { FirebaseContext } from \"./shared/firebase\";\r\n\r\n\r\nReactDOM.render(\r\n  <SettingProvider>\r\n    <App />\r\n  </SettingProvider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}