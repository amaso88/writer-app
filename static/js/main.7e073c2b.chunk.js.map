{"version":3,"sources":["logo.svg","config/history.js","shared/error/error-boundary.js","shared/error/error-boundary-route.js","config/routes-constants.js","shared/firebase/db-constants.js","shared/session/auth-data.js","shared/firebase/auth-service.js","shared/firebase/base-service.js","shared/firebase/user-service.js","shared/firebase/brand-service.js","shared/firebase/product-line-service.js","shared/firebase/product-service.js","shared/firebase/company-service.js","shared/firebase/firebase-manager.js","shared/context/auth-manager.js","shared/context/index.js","shared/session/withAuthorization.js","modules/layouts/tabs/tab-header.js","modules/layouts/tabs/index.js","modules/layouts/autocomplete/creatable.js","modules/layouts/autocomplete/select.js","modules/layouts/autocomplete/index.js","modules/layouts/loading/index.js","modules/general/report/product-by-user.js","modules/general/report/product-line-by-user.js","modules/general/report/brands-by-user.js","modules/general/home/reports-admin.js","modules/general/home/reports-user.js","modules/general/home/index.js","shared/error/page-not-found.js","modules/general/login/index.js","shared/util/link-utils.js","modules/layouts/paginator/cursor.js","modules/admin/company-management/company-management.js","modules/admin/company-management/company-management-form.js","modules/admin/company-management/company-management-create.js","modules/admin/company-management/company-management-view.js","modules/admin/company-management/company-management-edit.js","modules/admin/company-management/company-management-delete.js","modules/admin/company-management/index.js","modules/layouts/paginator/index.js","modules/admin/product-line-management/product-line-management.js","shared/util/string-utils.js","modules/admin/product-line-management/product-line-management-form.js","modules/admin/product-line-management/product-line-management-create.js","modules/admin/product-line-management/product-line-management-view.js","modules/admin/product-line-management/product-line-management-edit.js","modules/admin/product-line-management/product-line-management-delete.js","modules/admin/product-line-management/index.js","modules/admin/brand-management/brand-management.js","modules/admin/brand-management/brand-management-form.js","modules/admin/brand-management/brand-management-create.js","modules/admin/brand-management/brand-management-view.js","modules/admin/brand-management/brand-management-edit.js","modules/admin/brand-management/brand-management-delete.js","modules/admin/brand-management/index.js","modules/admin/product/product-management.js","modules/admin/product/product-management-form.js","modules/admin/product/product-management-create.js","modules/admin/product/product-management-view.js","modules/admin/product/product-management-edit.js","modules/admin/product/product-management-delete.js","modules/layouts/ckeditor/index.js","modules/admin/product/product-management-html.js","modules/admin/product/index.js","routes.js","modules/layouts/header/index.js","modules/layouts/footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","ErrorBoundary","state","error","undefined","errorInfo","this","setState","errorDetails","className","toString","componentStack","props","children","React","Component","ErrorBoundaryRoute","component","rest","Error","path","render","ROUTES_CONSTANTS","LOGIN","index","create","view","uid","edit","delete","html","DB_CONSTANTS","getAll","getOne","isAdmin","email","ROLES","AuthService","serviceData","loginWithGoogle","Promise","resolve","reject","auth","signInWithPopup","googleProvider","then","socialAuthUser","userTemp","username","user","displayName","id","roles","catch","console","log","logout","signOut","BaseService","db","refAll","pathAll","ref","queryAttr","customRef","limitLast","limitToLast","limitFirst","limitToFirst","startAt","endAt","orderByChild","equalTo","query","getCustomQuery","on","snapshot","itemsObject","val","itemsList","Object","keys","map","key","once","numChildren","item","userId","push","created","moment","now","updated","createdBy","getRefOne","set","remove","UserService","BrandService","ProductLineService","ProductService","CompanyService","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","getService","service","services","app","initializeApp","database","GoogleAuthProvider","authService","userService","brandService","productLineService","productService","companyService","brand","productLine","product","company","AuthManager","setUser","isAuthenticated","SettingContext","createContext","SettingProvider","firebase","Provider","value","withSetting","Consumer","context","withAuthorization","condition","WithAuthorization","onAuthStateChanged","authUser","history","TabHeader","onClick","e","preventDefault","label","activeTab","NavItem","NavLink","active","to","TabsWidget","onClickTabItem","tab","Nav","child","style","paddingTop","CreatableWidget","isLoading","options","handleChange","newValue","actionMeta","isClearable","isMulti","onChange","onCreateOption","length","SelectWidget","nextProps","nextState","AutoComplete","isCreatable","selectedOptions","checkIfSelectedOptionsChange","i","nextSelected","iquals","j","stateSelected","defaultValue","prepareOptions","option","defaultLabel","selectedOption","handleCreate","inputValue","Loading","Spinner","animation","role","variant","ProductByUser","changeProductHandler","userUid","userName","getData","a","async","products","brands","loading","items","getItems","getRefAll","off","Container","Row","Col","md","Button","Table","striped","bordered","hover","code","name","shortDescription","productLineName","brandName","ProductLineByUser","description","BrandsByUser","ReportsAdmin","ReportUser","totalBrand","totalProduct","totalProductLine","getCountAll","Jumbotron","fluid","HomePage","PageNotFound","LoginPage","getItem","existUser","createItem","Card","border","width","CardImg","src","logo","CardBody","CardTitle","handleLink","goBack","Cursor","baseRef","pageSize","lastKey","lastValue","firstKey","firstValue","snap","data","forEach","ss","shift","last","pop","BrandManagement","handlePagination","activePage","isForward","pagination","sortEntities","moveForward","moveBackward","cursor","next","previous","itemsPerPage","total","ButtonGroup","aria-label","CompanyManagementForm","wordCount","changeHandler","event","targetName","target","targetValue","texto","replace","split","handleSubmit","saveEntity","title","Form","noValidate","onSubmit","validated","htmlFor","type","CompanyManagementCreate","CompanyManagementView","match","params","ListGroup","ListGroupItem","CompanyManagementEdit","updateItem","CompanyManagementDelete","removeItem","Modal","show","onHide","ModalHeader","closeButton","ModalBody","ModalFooter","CompanyRoutes","url","CompanyManagement","PaginatorWidget","totalPages","updateActivePage","currentPage","onPageChanged","firtPage","previousPage","current","nextPage","lastPage","showFirstButton","showPrevButton","showNextButton","showLastButton","itemsToDisplay","renderItem","icon","text","isShowing","outline","size","color","disabled","Math","ceil","Number","Pagination","ProductLineManagement","getWordCount","word","ProductLineManagementForm","companiesUID","companiesName","changeCompaniesHandler","companies","ProductLineManagementCreate","ProductLineManagementView","ProductLineManagementEdit","ProductLineManagementDelete","ProductLinesRoutes","BrandManagementForm","BrandManagementCreate","BrandManagementView","BrandManagementEdit","BrandManagementDelete","BrandRoutes","ProductManagement","ProductManagementForm","largeDescription","htmlDescription","productLineUID","brandUID","wordCountShortDescription","wordCountLargeDescription","productLines","changeProductLineHandler","changeBrandHandler","getProductLinesAndBrandsData","lg","ProductManagementCreate","ProductManagementView","ProductManagementEdit","ProductManagementDelete","CKEditorWidget","evt","newContent","editor","content","short","large","activeClass","events","change","ProductManagementHtml","saveHtmlContent","ProductRoutes","Routes","exact","Home","Header","toggle","bind","isOpen","homeRoute","companiesRoute","productLinesRoute","brandRoute","productRoute","Navbar","fixed","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","App","componentDidMount","forceUpdate","logoutWithGoogle","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7e073c2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory()\r\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component{\r\n   state = { error: undefined, errorInfo: undefined };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error,\r\n      errorInfo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorInfo } = this.state;\r\n    if (errorInfo) {\r\n      const errorDetails =\r\n         ( \r\n\t\t\t\t\t<details className=\"preserve-space\"> \r\n\t\t\t\t\t\t{error && error.toString()} \r\n\t\t\t\t\t\t<br /> \r\n\t\t\t\t\t\t{errorInfo.componentStack}\r\n\t\t\t\t\t</details>\r\n        )\r\n      return (\r\n        <div>\r\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\r\n          {errorDetails}\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport ErrorBoundary from './error-boundary';\r\n\r\n\r\nexport const ErrorBoundaryRoute = ({ component: Component, ...rest }) => {\r\n  const encloseInErrorBoundary = props => (\r\n    <ErrorBoundary>\r\n      <Component {...props} />\r\n    </ErrorBoundary>\r\n  );\r\n\r\n  if (!Component) throw new Error(`A component needs to be specified for path ${(rest).path}`);\r\n\r\n  return <Route {...rest} render={encloseInErrorBoundary} />;\r\n};\r\n\r\nexport default ErrorBoundaryRoute;\r\n","export const ROUTES_CONSTANTS = {\r\n  HOME: \"/\",\r\n  AUTH: {\r\n    LOGIN: \"/login\"\r\n  },\r\n  COMPANY: {\r\n    index: () => '/company',\r\n    create: () => '/company/create',\r\n    view: uid => `/company/view/${uid}`,\r\n    edit: uid => `/company/edit/${uid}`,\r\n    delete: uid => `/company/delete/${uid}`,\r\n  },\r\n  PRODUCT_LINE: {\r\n    index: () => '/product_line',\r\n    create: () => '/product_line/create',\r\n    view: uid => `/product_line/view/${uid}`,\r\n    edit: uid => `/product_line/edit/${uid}`,\r\n    delete: uid => `/product_line/delete/${uid}`,\r\n  },\r\n  BRAND: {\r\n    index: () => '/brand',\r\n    create: () => '/brand/create',\r\n    view: uid => `/brand/view/${uid}`,\r\n    edit: uid => `/brand/edit/${uid}`,\r\n    delete: uid => `/brand/delete/${uid}`,\r\n  },\r\n  PRODUCT: {\r\n    index: () => '/product',\r\n    create: () => '/product/create',\r\n    view: uid => `/product/view/${uid}`,\r\n    edit: uid => `/product/edit/${uid}`,\r\n    delete: uid => `/product/delete/${uid}`,\r\n    html: uid => `/product/html/${uid}`,\r\n  } \r\n};\r\n","\r\nexport const DB_CONSTANTS = {\r\n\tCOMPANY : {\r\n\t\tgetAll: () => 'companies',\r\n\t\tgetOne: uid => `companies/${uid}`\r\n\t},\r\n\tPRODUCT_LINE : {\r\n\t\tgetAll: () => 'product_lines',\r\n\t\tgetOne: uid => `product_lines/${uid}`\r\n\t},\r\n\tBRAND : {\r\n\t\tgetAll: () => 'brands',\r\n\t\tgetOne: uid => `brands/${uid}`\r\n\t},\r\n\tPRODUCT : {\r\n\t\tgetAll: () => 'products',\r\n\t\tgetOne: uid => `products/${uid}`\r\n\t},\r\n\tUSER : {\r\n\t\tgetAll: () => 'users',\r\n\t\tgetOne: uid => `users/${uid}`\r\n\t}\r\n}","\r\nexport const isAdmin = email => {\r\n\tif( email && email === 'cabrerarobles@gmail.com' || email === 'amaso88@gmail.com') {\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport const ROLES = {\r\n\tADMIN: 'admin',\r\n\tWRITTER: 'writter'\r\n}","import { isAdmin, ROLES } from \"../session/auth-data\";\r\n\r\nclass AuthService {\r\n  constructor(serviceData) {\r\n    this.auth = serviceData.auth;\r\n    this.googleProvider = serviceData.googleProvider;\r\n  }\r\n\r\n  // *** Auth API ***\r\n  loginWithGoogle = () => {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth\r\n        .signInWithPopup(this.googleProvider)\r\n        .then(socialAuthUser => {\r\n          const userTemp = {\r\n            username: socialAuthUser.user.displayName,\r\n            email: socialAuthUser.user.email,\r\n            id: socialAuthUser.user.uid,\r\n            roles: isAdmin(socialAuthUser.user.email)\r\n              ? ROLES.ADMIN\r\n              : ROLES.WRITTER\r\n          };\r\n          resolve(userTemp);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth\r\n        .signOut()\r\n        .then(() => {\r\n          resolve();\r\n        })\r\n        .catch(error => {\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n}\r\nexport default AuthService;\r\n","import moment from \"moment\";\r\n\r\nclass BaseService {\r\n  constructor(serviceData) {\r\n    this.db = serviceData.db;\r\n\r\n    /**\r\n     * baseRef es la variable que almacena la referencia principal de la entidad\r\n     */\r\n    this.refAll = serviceData.refAll;\r\n\r\n    this.pathAll = serviceData.path;\r\n  }\r\n\r\n  /**\r\n   * Funcion que retorna la referencia base de la entidad\r\n   */\r\n  getRefAll() {\r\n    return this.refAll;\r\n  }\r\n\r\n  /**\r\n   * Funcion que retorna la referencia de una entidad hija por su uid\r\n   * @param {String} uid Clave primaria\r\n   */\r\n  getRefOne(uid) {\r\n    return this.db.ref(`${this.pathAll}/${uid}`);\r\n  }\r\n\r\n  /**\r\n   * Funcion que retorna un query customizada\r\n   * @param {Object} queryAttr Objeto que contiene los diferentes tipos de queries\r\n   */\r\n  getCustomQuery(queryAttr = null) {\r\n    if (!queryAttr) {\r\n      return this.refAll;\r\n    }\r\n    let customRef = this.refAll;\r\n    if (queryAttr.limitLast) {\r\n      customRef = customRef.limitToLast(queryAttr.limitLast);\r\n    }\r\n    if (queryAttr.limitFirst) {\r\n      customRef = customRef.limitToFirst(queryAttr.limitFirst);\r\n    }\r\n    if (queryAttr.startAt) {\r\n      customRef = customRef.startAt(queryAttr.startAt);\r\n    }\r\n    if (queryAttr.endAt) {\r\n      customRef = customRef.endAt(queryAttr.endAt);\r\n    }\r\n    if (queryAttr.orderByChild) {\r\n      customRef = customRef.orderByChild(queryAttr.orderByChild);\r\n    }\r\n    if (queryAttr.equalTo) {\r\n      customRef = customRef.equalTo(queryAttr.equalTo);\r\n    }\r\n\r\n    return customRef;\r\n  }\r\n\r\n  /**\r\n   * Funcion que devuelve todos los datos que existan en la query especificada\r\n   * @param {Firebase.query} query Query que contiene la referencia a los datos\r\n   */\r\n  getAll(query = null) {\r\n    return new Promise((resolve, reject) => {\r\n      let currentRef = query ? this.getCustomQuery(query) : this.refAll;\r\n      currentRef.on(\r\n        \"value\",\r\n        snapshot => {\r\n          const itemsObject = snapshot.val();\r\n          const itemsList = itemsObject\r\n            ? Object.keys(itemsObject).map(key => ({\r\n                ...itemsObject[key],\r\n                uid: key\r\n              }))\r\n            : [];\r\n          resolve(itemsList);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Funcion que retorna el total de datos que existan en la query especificada\r\n   * @param {Firebase.query} query Query que contiene la referencia a los datos\r\n   */\r\n  getCountAll(query = null) {\r\n    return new Promise((resolve, reject) => {\r\n      let currentRef = query ? this.getCustomQuery(query) : this.refAll;\r\n      currentRef\r\n        .once(\"value\")\r\n        .then(snapshot => {\r\n          resolve(snapshot.numChildren());\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Funcion para crear un elemento\r\n   * @param {Object} item Objeto a insertar\r\n   * @param {Uid} userId Clave del usuario\r\n   */\r\n  createItem(item, userId) {\r\n    return new Promise((resolve, reject) => {\r\n      // Get a key for a new Item.\r\n      var uid = this.refAll.push().key;\r\n      item.created = moment.now();\r\n      item.updated = moment.now();\r\n      item.createdBy = userId;\r\n      this.getRefOne(uid).set(item, error => {\r\n        if (error) {\r\n          console.log(error);\r\n          reject(error);\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Funcion para crear un elemento\r\n   * @param {Object} item Objeto a insertar\r\n   * @param {Uid} uid Clave del elemento\r\n   */\r\n  updateItem(item, uid) {\r\n    return new Promise((resolve, reject) => {\r\n      item.updated = moment.now();\r\n      this.getRefOne(uid).set(item, error => {\r\n        if (error) {\r\n          console.log(error);\r\n          reject(error);\r\n        } else {\r\n          resolve(true);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Funcion que retorna el elemento de acuerdo a la clave\r\n   * @param {Uid} uid Clave del elemento\r\n   */\r\n  getItem(uid) {\r\n    return new Promise((resolve, reject) => {\r\n      this.getRefOne(uid)\r\n        .once(\"value\")\r\n        .then(snapshot => {\r\n          const item = snapshot.val();\r\n          resolve(item);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Funcion que elimina a un elemento\r\n   * @param {Uid} uid Clave del elemento\r\n   */\r\n  removeItem(uid) {\r\n    return new Promise((resolve, reject) => {\r\n      this.getRefOne(uid).remove(error => {\r\n        if (error) {\r\n          console.log(error);\r\n          reject(error);\r\n        } else {\r\n          console.log(\"eliminado correctamente!!!\");\r\n          resolve(true);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default BaseService;\r\n","import { DB_CONSTANTS } from \"./db-constants\";\r\nimport BaseService from \"./base-service\";\r\n\r\nclass UserService extends BaseService {\r\n  constructor(serviceData) {\r\n    super({\r\n      db: serviceData.db,\r\n      refAll: serviceData.db.ref(DB_CONSTANTS.USER.getAll()),\r\n      path: DB_CONSTANTS.USER.getAll()\r\n    });\r\n  }\r\n}\r\n\r\nexport default UserService;\r\n","import { DB_CONSTANTS } from \"./db-constants\";\r\nimport BaseService from \"./base-service\";\r\n\r\nclass BrandService extends BaseService {\r\n  constructor(serviceData) {\r\n    super({\r\n      db: serviceData.db,\r\n      refAll: serviceData.db.ref(DB_CONSTANTS.BRAND.getAll()),\r\n      path: DB_CONSTANTS.BRAND.getAll()\r\n    });\r\n  }\r\n}\r\n\r\nexport default BrandService;\r\n","import { DB_CONSTANTS } from \"./db-constants\";\r\nimport BaseService from \"./base-service\";\r\n\r\nclass ProductLineService extends BaseService {\r\n  constructor(serviceData) {\r\n    super({\r\n      db: serviceData.db,\r\n      refAll: serviceData.db.ref(DB_CONSTANTS.PRODUCT_LINE.getAll()),\r\n      path: DB_CONSTANTS.PRODUCT_LINE.getAll()\r\n    });\r\n  }\r\n}\r\n\r\nexport default ProductLineService;\r\n","import { DB_CONSTANTS } from \"./db-constants\";\r\nimport BaseService from \"./base-service\";\r\n\r\nclass ProductService extends BaseService {\r\n  constructor(serviceData) {\r\n    super({\r\n      db: serviceData.db,\r\n      refAll: serviceData.db.ref(DB_CONSTANTS.PRODUCT.getAll()),\r\n      path: DB_CONSTANTS.PRODUCT.getAll()\r\n    });\r\n  }\r\n}\r\n\r\nexport default ProductService;","import { DB_CONSTANTS } from \"./db-constants\";\r\nimport BaseService from \"./base-service\";\r\n\r\nclass CompanyService extends BaseService {\r\n  constructor(serviceData) {\r\n    super({\r\n      db: serviceData.db,\r\n      refAll: serviceData.db.ref(DB_CONSTANTS.COMPANY.getAll()),\r\n      path: DB_CONSTANTS.COMPANY.getAll()\r\n    });\r\n  }\r\n}\r\n\r\nexport default CompanyService;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport { DB_CONSTANTS } from \"./db-constants\";\r\nimport AuthService from \"./auth-service\";\r\nimport UserService from \"./user-service\";\r\nimport BrandService from \"./brand-service\";\r\nimport ProductLineService from \"./product-line-service\";\r\nimport ProductService from \"./product-service\";\r\nimport CompanyService from \"./company-service\";\r\n\r\nconst fbConfig = {\r\n  apiKey: \"AIzaSyDInxcKjFND6CPzzrqfpDUJwfBgFHAPJJU\",\r\n  authDomain: \"writter-app-management.firebaseapp.com\",\r\n  databaseURL: \"https://writter-app-management.firebaseio.com\",\r\n  projectId: \"writter-app-management\",\r\n  storageBucket: \"writter-app-management.appspot.com\",\r\n  messagingSenderId: \"904791426685\",\r\n  appId: \"1:904791426685:web:45c2edf19ecf22bca01314\",\r\n  measurementId: \"G-WR58CXQRLF\"\r\n};\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(fbConfig);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n\r\n    this.authService = new AuthService({\r\n      auth: this.auth,\r\n      googleProvider: this.googleProvider,\r\n      db: this.db\r\n    });\r\n\r\n    this.userService = new UserService({\r\n      db: this.db\r\n    });\r\n\r\n    this.brandService = new BrandService({\r\n      db: this.db\r\n    });\r\n\r\n    this.productLineService = new ProductLineService({\r\n      db: this.db\r\n    })\r\n\r\n    this.productService = new ProductService({\r\n      db: this.db\r\n    })\r\n\r\n    this.companyService = new CompanyService({\r\n      db: this.db\r\n    })\r\n\r\n    this.services = {\r\n      auth: this.authService,\r\n      user: this.userService,\r\n      brand: this.brandService,\r\n      productLine: this.productLineService,\r\n      product: this.productService,\r\n      company: this.companyService\r\n    };\r\n\r\n    \r\n  }\r\n\r\n  getService = service => this.services[service];\r\n\r\n  // *** Auth API ***\r\n  loginWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\r\n  logout = () => this.auth.signOut();\r\n\r\n  // *** User API ***\r\n  // users = () => this.db.ref(DB_CONSTANTS.USER.getAll());\r\n  // user = uid => this.db.ref(DB_CONSTANTS.USER.getOne(uid));\r\n}\r\nexport default Firebase;\r\n","class AuthManager {\r\n  constructor() {\r\n    this.user = null;\r\n    this.isAuthenticated = false;\r\n  }\r\n\r\n  setUser = user => {\r\n    if (user !== null) {\r\n      this.isAuthenticated = true;\r\n    } else {\r\n      this.isAuthenticated = false;\r\n    }\r\n    this.user = user;\r\n  };\r\n}\r\n\r\nexport default AuthManager;\r\n","import React, { Component } from \"react\";\r\nimport Firebase from \"../firebase/firebase-manager\";\r\nimport AuthManager from \"./auth-manager\";\r\n\r\n// Crear el context\r\nconst SettingContext = React.createContext();\r\nSettingContext.displayName = 'SettingContext';\r\nexport { SettingContext };\r\n\r\nclass SettingProvider extends Component {\r\n  state = {\r\n\t\tfirebase: new Firebase(),\r\n\t\tauth: new AuthManager(),\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SettingContext.Provider\r\n        value={{\r\n\t\t\t\t\tfirebase: this.state.firebase,\r\n\t\t\t\t\tauth: this.state.auth\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </SettingContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const withSetting = Component => props => (\r\n  <SettingContext.Consumer>\r\n    {context => <Component {...props} context={context} />}\r\n  </SettingContext.Consumer>\r\n);\r\n\r\nexport default SettingProvider;\r\n","import React from \"react\";\r\nimport history from \"../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../config/routes-constants\";\r\nimport { withSetting } from \"../context\";\r\nimport { isAdmin, ROLES } from \"./auth-data\";\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.props.context.firebase.auth.onAuthStateChanged(function(authUser) {\r\n        if( !authUser) {\r\n          history.push(ROUTES_CONSTANTS.AUTH.LOGIN);\r\n          return;\r\n        }\r\n        const user = {\r\n          username: authUser.displayName,\r\n          email: authUser.email,\r\n          roles: isAdmin(authUser.email) ? ROLES.ADMIN : ROLES.WRITTER\r\n        };\r\n        if (!condition(user)) {\r\n          history.push(ROUTES_CONSTANTS.AUTH.LOGIN);\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      // if (this.props.context.auth.user === null) return null;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  return withSetting(WithAuthorization);\r\n};\r\nexport default withAuthorization;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavItem, NavLink } from \"reactstrap\";\r\n\r\nclass TabHeader extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n  };\r\n\r\n  onClick = e => {\r\n    e.preventDefault();\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: { activeTab, label }\r\n    } = this;\r\n\r\n    let className = \"tab-list-item\";\r\n\r\n    if (activeTab === label) {\r\n      className += \" tab-list-active\";\r\n    }\r\n\r\n    return (\r\n      <NavItem>\r\n        <NavLink\r\n          active={activeTab === label}\r\n          to=\"#\"\r\n          className={className}\r\n          onClick={onClick}\r\n        >\r\n          {label}\r\n        </NavLink>\r\n      </NavItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabHeader;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TabHeader from \"./tab-header\";\r\nimport { Nav } from \"reactstrap\";\r\n\r\nclass TabsWidget extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeTab: props.children[0].props.label\r\n    };\r\n  }\r\n\r\n  onClickTabItem = tab => {\r\n    this.setState({ activeTab: tab });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: { children },\r\n      state: { activeTab }\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"tabs\">\r\n        <Nav className=\"nav-tabs mt-5 nav-fill\">\r\n          {children.map(child => {\r\n            const { label } = child.props;\r\n\r\n            return (\r\n              <TabHeader\r\n                activeTab={activeTab}\r\n                key={label}\r\n                label={label}\r\n                onClick={onClickTabItem}\r\n              />\r\n            );\r\n          })}\r\n        </Nav>\r\n        <div style={{ paddingTop: \"20px\" }} className=\"container-fluid\">\r\n          {children.map(child => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabsWidget;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nexport default class CreatableWidget extends Component {\r\n\tstatic propTypes = {\r\n\t\toptions: PropTypes.array.isRequired,\r\n\t\thandleChange: PropTypes.func.isRequired,\r\n\t\tonCreateOption: PropTypes.func.isRequired,\r\n\t}\r\n\r\n\tstate = {\r\n\t\tisLoading: false,\r\n\t\toptions: this.props.options,\r\n\t\t// value: [],\r\n\t};\r\n\r\n\thandleChange = (newValue, actionMeta) => {\r\n\t\t// this.setState({ value: newValue });\r\n\t\tthis.props.handleChange( newValue, actionMeta);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<CreatableSelect\r\n\t\t\t\tisClearable\r\n\t\t\t\tisMulti={this.props.isMulti}\r\n\t\t\t\t// isDisabled={isLoading}\r\n\t\t\t\t// isLoading={isLoading}\r\n\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\tonCreateOption={this.props.onCreateOption}\r\n\t\t\t\toptions={this.props.options}\r\n\t\t\t\tvalue={this.props.value && this.props.value.length > 0 ? this.props.value : [] }\r\n\t\t\t\tclassName='text-dark multi-select-options'\r\n\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Select from 'react-select';\r\n\r\nexport default class SelectWidget extends Component {\r\n\tstatic propTypes = {\r\n\t\toptions: PropTypes.array.isRequired,\r\n\t\thandleChange: PropTypes.func.isRequired,\r\n\t\tvalue: PropTypes.array.isRequired,\r\n\t}\r\n\t\r\n\tstate = {\r\n\t\tisLoading: false,\r\n\t\toptions: this.props.options,\r\n\t\t// value: [],\r\n\t};\r\n\r\n\t// componentDidMount() {\r\n\t// \tconsole.log(this.props.value);\r\n\t// }\r\n\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\thandleChange = (newValue, actionMeta) => {\r\n\t\t// this.setState({ value: newValue });\r\n\t\tthis.props.handleChange( newValue, actionMeta);\r\n\t};\r\n\r\n\trender() {\t\t\r\n\t\treturn (\r\n\t\t\t<Select\r\n\t\t\t\tisClearable\r\n\t\t\t\tisMulti={this.props.isMulti}\r\n\t\t\t\t// isDisabled={isLoading}\r\n\t\t\t\t// isLoading={isLoading}\r\n\t\t\t\tonChange={this.handleChange}\t\t\t\t\r\n\t\t\t\toptions={this.props.options}\r\n\t\t\t\tvalue={this.props.value && this.props.value.length > 0 ? this.props.value : [] }\r\n\t\t\t\tclassName='text-dark multi-select-options'\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CreatableWidget from \"./creatable\";\r\nimport SelectWidget from \"./select\";\r\n\r\nexport default class AutoComplete extends Component {\r\n  static propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    selectedOptions: PropTypes.array,\r\n    defaultLabel: PropTypes.string.isRequired,\r\n    defaultValue: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    isCreatable: PropTypes.bool\r\n  };\r\n\r\n  state = {\r\n    isLoading: false,\r\n    isCreatable: false,\r\n    options: [],\r\n    selectedOptions: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.prepareOptions();\r\n  }\r\n\r\n  checkIfSelectedOptionsChange = nextProps => {\r\n    if (\r\n      nextProps.selectedOptions &&\r\n      this.state.selectedOptions.length !== nextProps.selectedOptions.length\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    for (let i = 0; i < nextProps.selectedOptions.length; i++) {\r\n      const nextSelected = nextProps.selectedOptions[i];\r\n      let iquals = false;\r\n      for (let j = 0; j < this.state.selectedOptions.length; j++) {\r\n        const stateSelected = this.state.selectedOptions[j];\r\n        if (nextSelected[this.props.defaultValue] == stateSelected.value) {\r\n          iquals = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!iquals) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      (nextProps.options &&\r\n        this.state.options.length !== nextProps.options.length) ||\r\n      this.checkIfSelectedOptionsChange(nextProps)\r\n    ) {\r\n      this.prepareOptions();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  prepareOptions = () => {\r\n    // this.setState({\r\n    //     ...this.state,\r\n    //     isLoading: true,\r\n    // })\r\n\r\n    // console.log(this.props.selectedOptions);\r\n\r\n    let options = this.props.options.map(option => {\r\n      return {\r\n        label: option[this.props.defaultLabel],\r\n        value: option[this.props.defaultValue]\r\n      };\r\n    });\r\n\r\n    let selectedOptions = this.props.selectedOptions.map(selectedOption => {\r\n      return {\r\n        label: selectedOption[this.props.defaultLabel],\r\n        value: selectedOption[this.props.defaultValue]\r\n      };\r\n    });\r\n\r\n    // console.log(\"this.props.selectedOptions\");\r\n    // console.log(this.props.selectedOptions);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      // isLoading: false,\r\n      isCreatable: this.props.isCreatable ? true : false,\r\n      options,\r\n      selectedOptions\r\n    });\r\n  };\r\n\r\n  handleChange = (newValue, actionMeta) => {\r\n    this.props.handleChange(newValue);\r\n  };\r\n\r\n  handleCreate = inputValue => {\r\n    this.props.handleCreate(inputValue);\r\n  };\r\n\r\n  render() {\r\n    const { options, selectedOptions } = this.state;\r\n    return this.props.isCreatable ? (\r\n      <CreatableWidget\r\n        isClearable\r\n        isMulti={this.props.isMulti}\r\n        handleChange={this.handleChange}\r\n        onCreateOption={this.handleCreate}\r\n        options={options}\r\n        className=\"text-dark multi-select-options\"\r\n        value={\r\n          selectedOptions && selectedOptions.length > 0 ? selectedOptions : []\r\n        }\r\n      />\r\n    ) : (\r\n      <SelectWidget\r\n        isClearable\r\n        isMulti={this.props.isMulti}\r\n        handleChange={this.handleChange}\r\n        options={options}\r\n        className=\"text-dark multi-select-options\"\r\n        value={\r\n          selectedOptions && selectedOptions.length > 0 ? selectedOptions : []\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\r\n      Loading...\r\n    </Spinner>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport { Container, Table, Button, Row, Col } from \"reactstrap\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\nimport Loading from \"../../layouts/loading\";\r\n\r\nclass ProductByUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      userUid: null,\r\n      userName: null,\r\n      products: []\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.getService(\"user\").getRefAll();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    this.getItems.on(\"value\", snapshot => {\r\n      const itemsObject = snapshot.val();\r\n      const itemsList = itemsObject\r\n        ? Object.keys(itemsObject).map(key => ({\r\n            ...itemsObject[key],\r\n            uid: key\r\n          }))\r\n        : [];\r\n      this.setState({\r\n        ...this.state,\r\n        items: itemsList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.getItems.off();\r\n  }\r\n\r\n  changeProductHandler = value => {\r\n    this.setState({\r\n      ...this.state,\r\n      userUid: value ? value.value : \"\",\r\n      userName: value ? value.label : \"\"\r\n    });\r\n  };\r\n\r\n  getData = async userId => {\r\n    if (!userId) {\r\n      this.setState({ ...this.state, products: [] });\r\n      return;\r\n    }\r\n    const { firebase } = this.props.context;\r\n    const brands = await firebase.getService(\"product\").getAll({\r\n      orderByChild: \"createdBy\",\r\n      equalTo: userId\r\n    });\r\n    this.setState({ ...this.state, products: brands });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.loading && <Loading />}\r\n        <h2> Seleccione un usuario</h2>\r\n        <Row>\r\n          {this.state.items && this.state.items.length > 0 && (\r\n            <>\r\n              <Col md=\"8\">\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={this.state.items}\r\n                  defaultLabel=\"username\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeProductHandler}\r\n                  selectedOptions={\r\n                    this.state.userUid\r\n                      ? [\r\n                          {\r\n                            uid: this.state.userUid,\r\n                            username: this.state.userName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <Button\r\n                  className=\"btn-view\"\r\n                  onClick={() => {\r\n                    this.getData(this.state.userUid);\r\n                  }}\r\n                >\r\n                  Ver\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <h2 className=\"pt-5\">Productos</h2>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table striped bordered hover>\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>C&oacute;digo</th>\r\n                  <th>Nombre</th>\r\n                  <th>Descripci&oacute;n corta</th>\r\n                  <th>Linea</th>\r\n                  <th>Marca</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.products.length > 0 &&\r\n                  this.state.products.map((item, i) => (\r\n                    <tr key={item.uid}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{item.code}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.shortDescription}</td>\r\n                      <td>{item.productLineName}</td>\r\n                      <td>{item.brandName}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductByUser);\r\n","import React, { Component } from \"react\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport { Container, Table, Button, Row, Col } from \"reactstrap\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\nimport Loading from \"../../layouts/loading\";\r\n\r\nclass ProductLineByUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      userUid: null,\r\n      userName: null,\r\n      products: []\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.getService(\"user\").getRefAll();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    this.getItems.on(\"value\", snapshot => {\r\n      const itemsObject = snapshot.val();\r\n      const itemsList = itemsObject\r\n        ? Object.keys(itemsObject).map(key => ({\r\n            ...itemsObject[key],\r\n            uid: key\r\n          }))\r\n        : [];\r\n      this.setState({\r\n        ...this.state,\r\n        items: itemsList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.getItems.off();\r\n  }\r\n\r\n  changeProductHandler = value => {\r\n    this.setState({\r\n      ...this.state,\r\n      userUid: value ? value.value : \"\",\r\n      userName: value ? value.label : \"\"\r\n    });\r\n  };\r\n\r\n  getData = async userId => {\r\n    if (!userId) {\r\n      this.setState({ ...this.state, products: [] });\r\n      return;\r\n    }\r\n    const { firebase } = this.props.context;\r\n    const brands = await firebase.getService(\"productLine\").getAll({\r\n      orderByChild: \"createdBy\",\r\n      equalTo: userId\r\n    });\r\n    this.setState({ ...this.state, products: brands });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.loading && <Loading />}\r\n        <h2> Seleccione un usuario</h2>\r\n        <Row>\r\n          {this.state.items && this.state.items.length > 0 && (\r\n            <>\r\n              <Col md=\"8\">\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={this.state.items}\r\n                  defaultLabel=\"username\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeProductHandler}\r\n                  selectedOptions={\r\n                    this.state.userUid\r\n                      ? [\r\n                          {\r\n                            uid: this.state.userUid,\r\n                            username: this.state.userName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <Button\r\n                  className=\"btn-view\"\r\n                  onClick={() => {\r\n                    this.getData(this.state.userUid);\r\n                  }}\r\n                >\r\n                  Ver\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <h2 className=\"pt-5\">Lineas de Productos</h2>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table striped bordered hover>\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Nombre</th>\r\n                  <th>Descripci&oacute;n</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.products.length > 0 &&\r\n                  this.state.products.map((item, i) => (\r\n                    <tr key={item.uid}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.description}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineByUser);\r\n","import React, { Component } from \"react\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport { Container, Table, Button, Row, Col } from \"reactstrap\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\nimport Loading from \"../../layouts/loading\";\r\n\r\nclass BrandsByUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      userUid: null,\r\n      userName: null,\r\n      products: []\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.getService(\"user\").getRefAll();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    this.getItems.on(\"value\", snapshot => {\r\n      const itemsObject = snapshot.val();\r\n      const itemsList = itemsObject\r\n        ? Object.keys(itemsObject).map(key => ({\r\n            ...itemsObject[key],\r\n            uid: key\r\n          }))\r\n        : [];\r\n      this.setState({\r\n        ...this.state,\r\n        items: itemsList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.getItems.off();\r\n  }\r\n\r\n  changeProductHandler = value => {\r\n    this.setState({\r\n      ...this.state,\r\n      userUid: value ? value.value : \"\",\r\n      userName: value ? value.label : \"\"\r\n    });\r\n  };\r\n\r\n  getData = async userId => {\r\n    if (!userId) {\r\n      this.setState({ ...this.state, products: [] });\r\n      return;\r\n    }\r\n    const { firebase } = this.props.context;\r\n    const brands = await firebase.getService(\"brand\").getAll({\r\n      orderByChild: \"createdBy\",\r\n      equalTo: userId\r\n    });\r\n    this.setState({ ...this.state, products: brands });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.loading && <Loading />}\r\n        <h2> Seleccione un usuario</h2>\r\n        <Row>\r\n          {this.state.items && this.state.items.length > 0 && (\r\n            <>\r\n              <Col md=\"8\">\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={this.state.items}\r\n                  defaultLabel=\"username\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeProductHandler}\r\n                  selectedOptions={\r\n                    this.state.userUid\r\n                      ? [\r\n                          {\r\n                            uid: this.state.userUid,\r\n                            username: this.state.userName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <Button\r\n                  className=\"btn-view\"\r\n                  onClick={() => {\r\n                    this.getData(this.state.userUid);\r\n                  }}\r\n                >\r\n                  Ver\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <h2 className=\"pt-5\">Marcas</h2>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table striped bordered hover>\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Nombre</th>\r\n                  <th>Descripci&oacute;n</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.products.length > 0 &&\r\n                  this.state.products.map((item, i) => (\r\n                    <tr key={item.uid}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.description}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandsByUser);\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport TabsWidget from '../../layouts/tabs'\r\nimport ProductByUser from \"../report/product-by-user\";\r\nimport ProductLineByUser from \"../report/product-line-by-user\";\r\nimport BrandsByUser from \"../report/brands-by-user\";\r\n\r\nexport default class ReportsAdmin extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n            <TabsWidget>\r\n              <div label=\"Productos por usuario\">\r\n                <ProductByUser />\r\n              </div>\r\n              <div label=\"Lineas por usuario\">\r\n                <ProductLineByUser />\r\n              </div>\r\n              <div label=\"Marcas por usuario\">\r\n                <BrandsByUser />\r\n              </div>\r\n            </TabsWidget>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Jumbotron } from \"reactstrap\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport Loading from \"../../layouts/loading\";\r\n\r\nclass ReportUser extends Component {\r\n  state = {\r\n    loading: false,\r\n    totalBrand: 0,\r\n    totalProduct: 0,\r\n    totalProductLine: 0\r\n  };\r\n  async componentDidMount() {\r\n      this.setState({...this.state, loading: true})\r\n    const { firebase } = this.props.context;\r\n    const totalBrand = await firebase.getService(\"brand\").getCountAll({\r\n      orderByChild: \"createdBy\",\r\n      equalTo: this.props.context.auth.user.id\r\n    });\r\n    const totalProduct = await firebase.getService(\"product\").getCountAll({\r\n      orderByChild: \"createdBy\",\r\n      equalTo: this.props.context.auth.user.id\r\n    });\r\n    const totalProductLine = await firebase\r\n      .getService(\"productLine\")\r\n      .getCountAll({\r\n        orderByChild: \"createdBy\",\r\n        equalTo: this.props.context.auth.user.id\r\n      });\r\n\r\n    this.setState({\r\n      totalBrand,\r\n      totalProduct,\r\n      totalProductLine,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Jumbotron fluid>\r\n          <Container fluid>              \r\n            <h2 className=\"display-3\">{this.state.totalBrand} {this.state.loading && <Loading />}</h2>\r\n            <p className=\"lead\">Total de marcas</p>\r\n          </Container>\r\n        </Jumbotron>\r\n        <Jumbotron fluid>\r\n          <Container fluid>\r\n          <h2 className=\"display-3\">{this.state.totalProduct} {this.state.loading && <Loading />}</h2>\r\n            <p className=\"lead\">Total de productos</p>\r\n          </Container>\r\n        </Jumbotron>\r\n        <Jumbotron fluid>\r\n          <Container fluid>\r\n          <h2 className=\"display-3\">{this.state.totalProductLine} {this.state.loading && <Loading />}</h2>\r\n            <p className=\"lead\">Total de l&iacute;neas de productos</p>\r\n          </Container>\r\n        </Jumbotron>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nReportUser.displayName = \"ReportUser\";\r\n\r\nexport default withSetting(ReportUser);\r\n","import React, { Component } from \"react\";\r\nimport withAuthorization from \"../../../shared/session/withAuthorization\";\r\nimport ReportsAdmin from \"./reports-admin\";\r\nimport ReportUser from \"./reports-user\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    console.log(this.props.context.auth.user);\r\n    if (\r\n      this.props.context.auth.user &&\r\n      this.props.context.auth.user.roles === \"admin\"\r\n    ) {\r\n      return (\r\n       <ReportsAdmin />\r\n      );\r\n    } else if (\r\n      this.props.context.auth.user &&\r\n      this.props.context.auth.user.roles === \"writter\"\r\n    ) {\r\n      return (\r\n        <ReportUser />\r\n      )\r\n    } else {\r\n      return <p>Estas presentando problemas con la red?</p>;\r\n    }\r\n  }\r\n}\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(HomePage);\r\n","import React from 'react';\r\n//import { Alert } from 'reactstrap';\r\n\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>\r\n          The page does not exist.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageNotFound;","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nimport logo from \"../../../logo.svg\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    error: null\r\n  };\r\n\r\n  loginWithGoogle = async () => {\r\n    const { firebase } = this.props.context;\r\n    const socialAuthUser = await firebase.getService(\"auth\").loginWithGoogle();\r\n    const existUser = await firebase\r\n      .getService(\"user\")\r\n      .getItem(socialAuthUser.id);\r\n    const user = {\r\n      username: socialAuthUser.username,\r\n      email: socialAuthUser.email,\r\n      id: socialAuthUser.id,\r\n      roles: socialAuthUser.roles\r\n    };\r\n    console.log(user)\r\n    if (!existUser) {\r\n      await firebase.getService(\"user\").createItem(user, socialAuthUser.id);\r\n    }\r\n    this.props.context.auth.setUser(user);\r\n    history.push(ROUTES_CONSTANTS.HOME);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-md-center pt-5\">          \r\n          <Card border=\"default\" style={{ width: \"18rem\" }}>\r\n            <CardImg variant=\"top\" src={logo} />\r\n            <CardBody className=\"justify-content-center\">\r\n              <CardTitle className=\"text-center\">\r\n                Autenticaci&oacute;n\r\n              </CardTitle>\r\n              <Button className=\"btn-login\" onClick={this.loginWithGoogle}>\r\n                Login With Google\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(LoginPage);\r\n","import history from \"../../config/history\";\r\n\r\n/**\r\n * Funcion para cambiar de ruta.\r\n * @param {String} path Ruta\r\n */\r\nexport const handleLink = (e, path) => {\r\n\te.preventDefault();\r\n\thistory.push(path);\r\n}\r\n\r\nexport const goBack = e => {\r\n\tif(e) e.preventDefault();\r\n\thistory.goBack();\r\n}","export default class Cursor {\r\n  constructor(baseRef, pageSize) {\r\n    this.baseRef = baseRef;\r\n    this.lastKey = null;\r\n    this.lastValue = null;\r\n    this.firstKey = null;\r\n    this.firstValue = null;\r\n    this.pageSize = pageSize;\r\n  }\r\n\r\n  next() {\r\n    let ref = this.baseRef;\r\n\r\n    if (this.lastValue !== null) {\r\n      // a previous page has been loaded so get the next one using the previous value/key\r\n      // we have to start from the current cursor so add one to page size\r\n      ref = ref\r\n        .startAt(this.lastValue, this.lastKey)\r\n        .limitToFirst(this.pageSize + 1);\r\n    } else {\r\n      // this is the first page\r\n      ref = ref.limitToFirst(this.pageSize);\r\n    }\r\n\r\n    return ref.once(\"value\").then(snap => {\r\n      const keys = [];\r\n      const data = []; // store data in array so it's ordered\r\n\r\n      snap.forEach(ss => {\r\n        data.push({ ...ss.val(), uid: ss.key });\r\n        keys.push(ss.key);\r\n      });\r\n\r\n      if (this.lastValue !== null) {\r\n        // skip the first value, which is actually the cursor\r\n        keys.shift();\r\n        data.shift();\r\n      }\r\n\r\n      // store the last loaded record\r\n      if (data.length) {\r\n        const last = data.length - 1;\r\n        this.lastKey = keys[last];\r\n        this.lastValue = data[last].created;\r\n        this.firstKey = keys[0];\r\n        this.firstValue = data[0].created;\r\n      }\r\n\r\n      return data;\r\n    });\r\n  }\r\n\r\n  previous() {\r\n    let ref = this.baseRef;\r\n\r\n    if (this.lastValue !== null) {\r\n      // a previous page has been loaded so get the next one using the previous value/key\r\n      // we have to start from the current cursor so add one to page size\r\n      ref = ref\r\n        .endAt(this.firstValue, this.firstKey)\r\n        .limitToLast(this.pageSize + 1);\r\n    }\r\n\r\n    return ref.once(\"value\").then(snap => {\r\n      const keys = [];\r\n      const data = []; // store data in array so it's ordered\r\n\r\n      snap.forEach(ss => {\r\n        data.push({ ...ss.val(), uid: ss.key });\r\n        keys.push(ss.key);\r\n      });\r\n\r\n      // store the last loaded record\r\n      if (data.length) {\r\n        const last = data.length - 1;\r\n        this.lastKey = keys[last];\r\n        this.lastValue = data[last].created;\r\n        this.lastKey = keys[0];\r\n        this.lastValue = data[0].created;\r\n      }\r\n\r\n      if (this.lastValue !== null) {\r\n        // skip the first value, which is actually the cursor\r\n        keys.pop();\r\n        data.pop();\r\n      }\r\n\r\n      return data;\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Row,\r\n  ButtonGroup\r\n} from \"reactstrap\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport '../../../index.css'\r\nimport Cursor from \"../../layouts/paginator/cursor\";\r\n\r\nclass BrandManagement extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      pagination: {\r\n        itemsPerPage: 2,\r\n        total: 0,\r\n        cursor: \"\",\r\n        activePage: 0\r\n      }\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.getService(\"company\").getRefAll();\r\n    this.cursor = new Cursor(\r\n      this.getItems.orderByChild(\"created\"),\r\n      this.state.pagination.itemsPerPage\r\n    );\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let total = await this.props.context.firebase\r\n      .getService(\"company\")\r\n      .getCountAll();\r\n    this.setState({\r\n      ...this.state,\r\n      pagination: {\r\n        ...this.state.pagination,\r\n        total\r\n      }\r\n    });\r\n    this.moveForward();\r\n  }\r\n\r\n  handlePagination = activePage => {\r\n    let isForward = this.state.pagination.activePage < activePage;\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        pagination: {\r\n          ...this.state.pagination,\r\n          activePage\r\n        }\r\n      },\r\n      () => this.sortEntities(isForward)\r\n    );\r\n  };\r\n\r\n  sortEntities = isForward => {\r\n    if (isForward) {\r\n      this.moveForward();\r\n    } else {\r\n      this.moveBackward();\r\n    }\r\n  };\r\n\r\n  moveForward = () => {\r\n    this.cursor.next().then(data => {\r\n      this.setState({\r\n        items: data\r\n      });\r\n    });\r\n  };\r\n\r\n  moveBackward = () => {\r\n    this.cursor.previous().then(data => {\r\n      this.setState({\r\n        items: data\r\n      });\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.getItems.off();\r\n  }\r\n\r\n  render() {\r\n    const { items, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5\">Compa&ntilde;ias</h2>\r\n        {loading && <Loading />}\r\n        <Row className=\"justify-content-end pb-1\">\r\n            <Button className=\"btn-created\"\r\n              onClick={e => handleLink(e, ROUTES_CONSTANTS.COMPANY.create())}\r\n            >\r\n              Crear\r\n            </Button>\r\n        </Row>\r\n        <div className=\"table-responsive\">\r\n            <Table striped bordered hover>\r\n              <thead className=\"table-head\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Nombre</th>\r\n                  <th>Descripci&oacute;n</th>\r\n                  <th>Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {items.length > 0 &&\r\n                  items.map((item, i) => (\r\n                    <tr key={item.uid}>\r\n                      <td>{i + 1}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.description}</td>\r\n                      <td className=\"row-table-actions text-center\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                          <Button\r\n                            className=\"btn-view\"\r\n                            onClick={e =>\r\n                              handleLink(e, ROUTES_CONSTANTS.COMPANY.view(item.uid))\r\n                            }\r\n                          >\r\n                            View\r\n                          </Button>\r\n                          <Button\r\n                            className=\"btn-edit\"\r\n                            onClick={e =>\r\n                              handleLink(e, ROUTES_CONSTANTS.COMPANY.edit(item.uid))\r\n                            }\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button\r\n                            className=\"btn-delete\"\r\n                            onClick={e =>\r\n                              handleLink(\r\n                                e,\r\n                                ROUTES_CONSTANTS.COMPANY.delete(item.uid)\r\n                              )\r\n                            }\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagement);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Container, Button, Row, Col } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\n\r\nexport default class CompanyManagementForm extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    saveEntity: PropTypes.func.isRequired,\r\n    item: PropTypes.object\r\n  };\r\n\r\n  state = {\r\n    item: {\r\n      name: \"\",\r\n      description: \"\"\r\n    },\r\n    wordCount: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n    if (item) {\r\n      this.setState({ item });\r\n    }\r\n  }\r\n\r\n  changeHandler = event => {\r\n    let targetName = event.target.name;\r\n    let targetValue = event.target.value;\r\n    let wordCount = this.state.wordCount;\r\n\r\n    if (targetName === \"description\") {\r\n      let texto = targetValue;\r\n      let primerBlanco = /^ /;\r\n      let ultimoBlanco = / $/;\r\n      let variosBlancos = /[ ]+/g;\r\n      texto = texto.replace(variosBlancos, \" \");\r\n      texto = texto.replace(primerBlanco, \"\");\r\n      texto = texto.replace(ultimoBlanco, \"\");\r\n      wordCount = texto.split(\" \").length;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        [targetName]: targetValue\r\n      },\r\n      wordCount\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // event.target.className = \"needs-validation\";\r\n    this.props.saveEntity(this.state.item);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5 pb-2\">{this.props.title}</h2>\r\n        <Form noValidate onSubmit={this.handleSubmit} validated={false} className=\"pt-2 pb-5\">\r\n            <Row>\r\n              <Col md=\"10\" className=\"btn-back-container\">\r\n                    <Button onClick={e => goBack(e)} className=\"btn-back\">Back</Button>\r\n              </Col>\r\n              <Col md=\"10\" className=\"form-group\">\r\n                <label htmlFor=\"name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={this.state.item.name}\r\n                  onChange={this.changeHandler}\r\n                />\r\n              </Col>\r\n              <Col md=\"10\" className=\"form-group\">\r\n                <label htmlFor=\"description\">Descripci&oacute;n</label>\r\n                <textarea\r\n                  className=\"form-control text-dark\"\r\n                  name=\"description\"\r\n                  value={this.state.item.description}\r\n                  onChange={this.changeHandler}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  Palabras: {this.state.wordCount}\r\n                </small>\r\n              </Col>\r\n            </Row>\r\n          <div className=\"btn-success-container\">\r\n            <Button type=\"submit\" className=\"btn-save btn-success\">Save</Button>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport CompanyManagementForm from \"./company-management-form\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass CompanyManagementCreate extends Component {\r\n  saveEntity = async item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let saveSuccess = await firebase.getService('company').createItem(item, this.props.context.auth.user.uid);\r\n\r\n    if( saveSuccess) {\r\n      history.push(ROUTES_CONSTANTS.COMPANY.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CompanyManagementForm title={\"Crear Compania\"} saveEntity={this.saveEntity} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(CompanyManagementCreate);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass CompanyManagementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n\r\n    let item = await firebase.getService(\"company\").getItem(uid);\r\n    this.setState({\r\n      item,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"10\">\r\n            <h2 className=\"pt-5 pb-2\">Ver Compania</h2>\r\n          </Col>\r\n          <Col md=\"10\" className=\"btn-loading mb-1\">\r\n            {loading && <Loading />}\r\n            <Button onClick={e => goBack(e)} className=\"btn-back\">\r\n              Atras\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            <ListGroup>\r\n              <ListGroupItem className=\"d-flex justify-content-between\">\r\n                <span>\r\n                  <strong>Nombre:</strong>\r\n                </span>\r\n                {item && item.name}\r\n              </ListGroupItem>\r\n              <ListGroupItem className=\"d-flex justify-content-between\">\r\n                <span>\r\n                  <strong>Descripci&oacute;n:</strong>\r\n                </span>\r\n                {item && item.description}\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(CompanyManagementView);\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport CompanyManagementForm from \"./company-management-form\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass CompanyManagementEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n\r\n    let item = await firebase.getService(\"company\").getItem(uid);\r\n    this.setState({\r\n      item,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  saveEntity = async item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    let updateSuccess = await firebase\r\n      .getService(\"company\")\r\n      .updateItem(item, uid);\r\n\r\n    if (updateSuccess) {\r\n      history.push(ROUTES_CONSTANTS.COMPANY.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <CompanyManagementForm\r\n        title={\"Actualizar compania\"}\r\n        saveEntity={this.saveEntity}\r\n        item={this.state.item}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(CompanyManagementEdit);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass CompanyManagementDelete extends Component {\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    let deleteSuccess = await firebase.getService(\"company\").removeItem(uid);\r\n    if (deleteSuccess) {\r\n      history.push(ROUTES_CONSTANTS.COMPANY.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal show={true} onHide={e => goBack(e)}>\r\n        <ModalHeader closeButton>Eliminar!!!</ModalHeader>\r\n        <ModalBody>Estas seguro que deseas eliminar este elemento? </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Eliminar\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(CompanyManagementDelete);\r\n","import React from 'react'\r\nimport { Switch  } from 'react-router-dom';\r\nimport ErrorBoundaryRoute from '../../../shared/error/error-boundary-route';\r\nimport CompanyManagement from './company-management';\r\nimport CompanyManagementCreate from \"./company-management-create\";\r\nimport CompanyManagementView from \"./company-management-view\";\r\nimport CompanyManagementEdit from \"./company-management-edit\";\r\nimport CompanyManagementDelete from \"./company-management-delete\";\r\n\r\nexport default function CompanyRoutes({match}) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Switch>\r\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/edit/:id`} component={CompanyManagementEdit} />\r\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/create`} component={CompanyManagementCreate} />\r\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}/view/:id`} component={CompanyManagementView} />\r\n\t\t\t\t<ErrorBoundaryRoute path={`${match.url}`} component={CompanyManagement} />\r\n\t\t\t</Switch>\r\n\t\t\t<ErrorBoundaryRoute path={`${match.url}/delete/:id`} component={CompanyManagementDelete} />\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Pagination } from \"reactstrap\";\r\n\r\nclass PaginatorWidget extends Component {\r\n  static propTypes = {\r\n    total: PropTypes.number.isRequired,\r\n    current: PropTypes.number.isRequired,\r\n    itemsPerPage: PropTypes.number.isRequired,\r\n    onPageChanged: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    totalPages: 0\r\n    // currentPage: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      totalPages: Math.ceil(Number(this.props.total / this.props.itemsPerPage))\r\n    });\r\n  }\r\n\r\n  updateActivePage = currentPage => {\r\n    // this.setState({ currentPage });\r\n    this.props.onPageChanged(currentPage);\r\n  };\r\n\r\n  firtPage = () => {\r\n    this.updateActivePage(1);\r\n  };\r\n\r\n  previousPage = () => {\r\n    // this.setState({ currentPage: this.state.currentPage - 1 });\r\n    this.updateActivePage(this.props.current - 1);\r\n  };\r\n\r\n  nextPage = () => {\r\n    // this.setState({ currentPage: this.state.currentPage + 1 });\r\n    this.updateActivePage(this.props.current + 1);\r\n  };\r\n\r\n  lastPage = () => {\r\n    this.updateActivePage(this.state.totalPages);\r\n  };\r\n\r\n  showFirstButton = () => {\r\n    if (this.props.current > 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  showPrevButton = () => {\r\n    if (this.props.current > 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  showNextButton = () => {\r\n    if (this.props.current < this.state.totalPages - 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  showLastButton = () => {\r\n    if (this.props.current < this.state.totalPages - 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  itemsToDisplay = currentPage => {\r\n    const items = [];\r\n\r\n    for (var i = 0; i < this.state.totalPages; i++) {\r\n      let item = {};\r\n      if (i === currentPage - 1) {\r\n        item.active = true;\r\n      }\r\n\r\n      items.push(item);\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  renderItem = (icon, text, onClick, isShowing) => (\r\n    <Button\r\n      outline\r\n      size=\"sm\"\r\n      className=\"px-2\"\r\n      color=\"white\"\r\n      variant=\"info\"\r\n      onClick={onClick}\r\n      disabled={isShowing() ? false : true}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <Pagination aria-label=\"Page navigation example\">\r\n        \r\n        {this.renderItem(\r\n          \"angle-left\",\r\n          \"Prev\",\r\n          this.previousPage,\r\n          this.showPrevButton\r\n        )}\r\n        {/* {this.itemsToDisplay(this.props.current).map( (item, index) => {\r\n\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\treturn this.renderItem(String(index), () => this.updateActivePage(index + 1), () => true )\r\n\t\t\t\t\t})} */}\r\n        {this.renderItem(\r\n          \"angle-right\",\r\n          \"Next\",\r\n          this.nextPage,\r\n          this.showNextButton\r\n        )}\r\n      </Pagination>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaginatorWidget;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Table, Button, Row, ButtonGroup } from \"reactstrap\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport Cursor from \"../../layouts/paginator/cursor\";\r\nimport PaginatorWidget from \"../../layouts/paginator\";\r\n\r\nclass ProductLineManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      pagination: {\r\n        itemsPerPage: 2,\r\n        total: 0,\r\n        cursor: \"\",\r\n        activePage: 0\r\n      }\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase\r\n      .getService(\"productLine\")\r\n      .getRefAll();\r\n    this.cursor = new Cursor(\r\n      this.getItems.orderByChild(\"created\"),\r\n      this.state.pagination.itemsPerPage\r\n    );\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let total = await this.props.context.firebase\r\n      .getService(\"productLine\")\r\n      .getCountAll();\r\n    this.setState({\r\n      ...this.state,\r\n      pagination: {\r\n        ...this.state.pagination,\r\n        total\r\n      }\r\n    });\r\n    this.moveForward();\r\n  }\r\n\r\n  handlePagination = activePage => {\r\n    let isForward = this.state.pagination.activePage < activePage;\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        pagination: {\r\n          ...this.state.pagination,\r\n          activePage\r\n        }\r\n      },\r\n      () => this.sortEntities(isForward)\r\n    );\r\n  };\r\n\r\n  sortEntities = isForward => {\r\n    if (isForward) {\r\n      this.moveForward();\r\n    } else {\r\n      this.moveBackward();\r\n    }\r\n  };\r\n\r\n  moveForward = () => {\r\n    this.cursor.next().then(data => {\r\n      this.setState({\r\n        items: data\r\n      });\r\n    });\r\n  };\r\n\r\n  moveBackward = () => {\r\n    this.cursor.previous().then(data => {\r\n      this.setState({\r\n        items: data\r\n      });\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.getItems.off();\r\n  }\r\n\r\n  render() {\r\n    const { items, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5\">Lineas de productos</h2>\r\n        {loading && <Loading />}\r\n\r\n        <Row className=\"justify-content-end pb-1\">\r\n          <Button\r\n            className=\"btn-created\"\r\n            onClick={e => handleLink(e, ROUTES_CONSTANTS.PRODUCT_LINE.create())}\r\n          >\r\n            Crear\r\n          </Button>\r\n        </Row>\r\n        <div className=\"table-responsive\">\r\n          <Table striped bordered hover>\r\n            <thead className=\"table-head\">\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Nombre</th>\r\n                <th>Descripci&oacute;n</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.length > 0 &&\r\n                items.map((item, i) => (\r\n                  <tr key={item.uid}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.description}</td>\r\n                    <td className=\"row-table-actions text-center\">\r\n                      <ButtonGroup aria-label=\"Basic example\">\r\n                        <Button\r\n                          className=\"btn-view\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.PRODUCT_LINE.view(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          View\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-edit\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.PRODUCT_LINE.edit(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-delete\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.PRODUCT_LINE.delete(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          {this.state.pagination.total > 0 && (\r\n            <PaginatorWidget\r\n              total={this.state.pagination.total}\r\n              current={this.state.pagination.activePage}\r\n              itemsPerPage={this.state.pagination.itemsPerPage}\r\n              onPageChanged={this.handlePagination}\r\n            />\r\n          )}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineManagement);\r\n","export const getWordCount = word => {\r\n  let texto = word;\r\n  let primerBlanco = /^ /;\r\n  let ultimoBlanco = / $/;\r\n  let variosBlancos = /[ ]+/g;\r\n  texto = texto.replace(variosBlancos, \" \");\r\n  texto = texto.replace(primerBlanco, \"\");\r\n  texto = texto.replace(ultimoBlanco, \"\");\r\n  return texto.split(\" \").length;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Row, Col, Container, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport { getWordCount } from \"../../../shared/util/string-utils\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\n\r\nexport default class ProductLineManagementForm extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    saveEntity: PropTypes.func.isRequired,\r\n    item: PropTypes.object\r\n  };\r\n\r\n  state = {\r\n    item: {\r\n      name: \"\",\r\n      description: \"\",\r\n      companiesUID: \"\",\r\n      companiesName: \"\"\r\n    },\r\n    wordCount: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n    if (item) {\r\n      let wordCount = this.state.wordCount;\r\n      if (item.description) {\r\n        let texto = item.description;\r\n        wordCount = getWordCount(texto);\r\n      }\r\n      this.setState({ item, wordCount });\r\n    }\r\n  }\r\n\r\n  changeHandler = event => {\r\n    let targetName = event.target.name;\r\n    let targetValue = event.target.value;\r\n    let wordCount = this.state.wordCount;\r\n\r\n    if (targetName === \"description\") {\r\n      let texto = targetValue;\r\n      wordCount = getWordCount(texto);\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        [targetName]: targetValue\r\n      },\r\n      wordCount\r\n    });\r\n  };\r\n\r\n  changeCompaniesHandler = value => {\r\n    this.setState({\r\n      item: {\r\n        ...this.state.item,\r\n        companiesUID: value ? value.value : \"\",\r\n        companiesName: value ? value.label : \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // event.target.className = \"needs-validation\";\r\n    this.props.saveEntity(this.state.item);\r\n  };\r\n\r\n  render() {\r\n    const { companies } = this.props;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5 pb-2\">{this.props.title}</h2>\r\n        <Form\r\n          noValidate\r\n          onSubmit={this.handleSubmit}\r\n          validated={false}\r\n          className=\"pt-2 pb-5\"\r\n        >\r\n          <Row>\r\n            <Col md=\"10\" className=\"btn-back-container\">\r\n              <Button onClick={e => goBack(e)} className=\"btn-back\">\r\n                Back\r\n              </Button>\r\n            </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"name\">Compa&ntilde;ia</label>\r\n              <AutoComplete\r\n                isCreatable={false}\r\n                isMulti={false}\r\n                options={companies}\r\n                defaultLabel=\"name\"\r\n                defaultValue=\"uid\"\r\n                handleChange={this.changeCompaniesHandler}\r\n                selectedOptions={\r\n                  this.state.item\r\n                    ? [\r\n                        {\r\n                          uid: this.state.item.companiesUID,\r\n                          name: this.state.item.companiesName\r\n                        }\r\n                      ]\r\n                    : []\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"name\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={this.state.item.name}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"description\">Descripcion</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={this.state.item.description}\r\n                onChange={this.changeHandler}\r\n              />\r\n              <small className=\"form-text text-muted\">\r\n                Palabras: {this.state.wordCount}\r\n              </small>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"btn-success-container\">\r\n            <Button type=\"submit\" className=\"btn-save btn-success\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ProductLineManagementForm from \"./product-line-management-form\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductLineManagementCreate extends Component {\r\n  state = {\r\n    companies: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    const companies = await firebase.getService(\"company\").getAll();\r\n\r\n    this.setState({ companies });\r\n  }\r\n\r\n  saveEntity = async item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let saveSuccess = await firebase.getService('productLine').createItem(item, this.props.context.auth.user.id);\r\n\r\n    if( saveSuccess) {\r\n      history.push(ROUTES_CONSTANTS.PRODUCT_LINE.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ProductLineManagementForm\r\n        title={\"Crear linea de productos\"}\r\n        saveEntity={this.saveEntity}\r\n        companies={this.state.companies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineManagementCreate);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductLineManagementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n\r\n    this.getItem = this.props.context.firebase.productLine;\r\n  }\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n\r\n    let item = await firebase.getService(\"productLine\").getItem(uid);\r\n    this.setState({\r\n      item,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"10\">\r\n            <h2 className=\"pt-5 pb-2\">Ver linea de productos</h2>\r\n          </Col>\r\n          <Col md=\"10\" className=\"btn-loading mb-1\">\r\n            {loading && <Loading />}\r\n            <Button onClick={e => goBack(e)} className=\"btn-back\">\r\n              Back\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            <ListGroup>\r\n              <ListGroupItem className=\"d-flex justify-content-between\">\r\n                <span>\r\n                  <strong>Nombre:</strong>\r\n                </span>\r\n                {item && item.name}\r\n              </ListGroupItem>\r\n              <ListGroupItem className=\"d-flex justify-content-between\">\r\n                <span>\r\n                  <strong>Descripci&oacute;n:</strong>\r\n                </span>\r\n                {item && item.description}\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineManagementView);\r\n","import React, { Component } from \"react\";\r\nimport ProductLineManagementForm from \"./product-line-management-form\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductLineManagementEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null,\r\n      companies: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n\r\n    let item = await firebase.getService(\"productLine\").getItem(uid);\r\n    const companies = await firebase.getService(\"company\").getAll();\r\n    this.setState({\r\n      item,\r\n      loading: false,\r\n      companies\r\n    });\r\n  }\r\n\r\n  saveEntity = async item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    let updateSuccess = await firebase\r\n      .getService(\"productLine\")\r\n      .updateItem(item, uid);\r\n\r\n    if (updateSuccess) {\r\n      history.push(ROUTES_CONSTANTS.PRODUCT_LINE.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <ProductLineManagementForm\r\n        title={\"Actualizar linea de productos\"}\r\n        saveEntity={this.saveEntity}\r\n        item={this.state.item}\r\n        companies={this.state.companies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductLineManagementEdit);\r\n","import React, { Component } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap'\r\nimport { goBack } from '../../../shared/util/link-utils'\r\nimport history from '../../../config/history';\r\nimport { ROUTES_CONSTANTS } from '../../../config/routes-constants';\r\nimport { withSetting } from '../../../shared/context';\r\n\r\nclass ProductLineManagementDelete extends Component {\r\n\thandleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    let deleteSuccess = await firebase.getService(\"productLine\").removeItem(uid);\r\n    if (deleteSuccess) {\r\n      history.push(ROUTES_CONSTANTS.PRODUCT_LINE.index());\r\n    }\r\n  }\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal show={true} onHide={e => goBack(e)}>\r\n        <ModalHeader closeButton>\r\n          Modal heading\r\n        </ModalHeader>\r\n        <ModalBody>Estas seguro que deseas eliminar este elemento? </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Eliminar\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withSetting( ProductLineManagementDelete)","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ErrorBoundaryRoute from \"../../../shared/error/error-boundary-route\";\r\nimport ProductLineManagement from \"./product-line-management\";\r\nimport ProductLineManagementCreate from \"./product-line-management-create\";\r\nimport ProductLineManagementView from \"./product-line-management-view\";\r\nimport ProductLineManagementEdit from \"./product-line-management-edit\";\r\nimport ProductLineManagementDelete from \"./product-line-management-delete\";\r\n\r\nexport default function ProductLinesRoutes({ match }) {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/edit/:id`}\r\n          component={ProductLineManagementEdit}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/create`}\r\n          component={ProductLineManagementCreate}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/view/:id`}\r\n          component={ProductLineManagementView}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}`}\r\n          component={ProductLineManagement}\r\n        />\r\n      </Switch>\r\n      <ErrorBoundaryRoute\r\n        path={`${match.url}/delete/:id`}\r\n        component={ProductLineManagementDelete}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Table, Button, Row, ButtonGroup } from \"reactstrap\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport PaginatorWidget from \"../../layouts/paginator\";\r\nimport Cursor from \"../../layouts/paginator/cursor\";\r\n\r\nclass BrandManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      items: {},\r\n      pagination: {\r\n        itemsPerPage: 2,\r\n        total: 0,\r\n        cursor: \"\",\r\n        activePage: 0\r\n      }\r\n    };\r\n\r\n    this.getItems = this.props.context.firebase.getService(\"brand\").getRefAll();\r\n    this.cursor = new Cursor(\r\n      this.getItems.orderByChild(\"created\"),\r\n      this.state.pagination.itemsPerPage\r\n    );\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let total = await this.props.context.firebase\r\n      .getService(\"brand\")\r\n      .getCountAll();\r\n    this.setState({\r\n      ...this.state,\r\n      pagination: {\r\n        ...this.state.pagination,\r\n        total\r\n      }\r\n    });\r\n    this.moveForward();\r\n  }\r\n\r\n  handlePagination = activePage => {\r\n    let isForward = this.state.pagination.activePage < activePage;\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        pagination: {\r\n          ...this.state.pagination,\r\n          activePage\r\n        }\r\n      },\r\n      () => this.sortEntities(isForward)\r\n    );\r\n  };\r\n\r\n  sortEntities = isForward => {\r\n    if (isForward) {\r\n      this.moveForward();\r\n    } else {\r\n      this.moveBackward();\r\n    }\r\n  };\r\n\r\n  moveForward = () => {\r\n    this.cursor.next().then(data => {\r\n      this.setState({\r\n        items: data\r\n      });\r\n    });\r\n  };\r\n\r\n  moveBackward = () => {\r\n    this.cursor.previous().then(data => {\r\n      this.setState({\r\n        items: data\r\n      });\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.getItems.off();\r\n  }\r\n\r\n  render() {\r\n    const { items, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5\">Marcas</h2>\r\n        {loading && <Loading />}\r\n\r\n        <Row className=\"justify-content-end pb-1\">\r\n          <Button\r\n            className=\"btn-created\"\r\n            onClick={e => handleLink(e, ROUTES_CONSTANTS.BRAND.create())}\r\n          >\r\n            Crear\r\n          </Button>\r\n        </Row>\r\n        <div className=\"table-responsive\">\r\n          <Table striped bordered hover>\r\n            <thead className=\"table-head\">\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Nombre</th>\r\n                <th>Descripci&oacute;n</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.length > 0 &&\r\n                items.map((item, i) => (\r\n                  <tr key={item.uid}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.description}</td>\r\n                    <td className=\"row-table-actions text-center\">\r\n                      <ButtonGroup aria-label=\"Basic example\">\r\n                        <Button\r\n                          className=\"btn-view\"\r\n                          onClick={e =>\r\n                            handleLink(e, ROUTES_CONSTANTS.BRAND.view(item.uid))\r\n                          }\r\n                        >\r\n                          View\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-edit\"\r\n                          onClick={e =>\r\n                            handleLink(e, ROUTES_CONSTANTS.BRAND.edit(item.uid))\r\n                          }\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          className=\"btn-delete\"\r\n                          onClick={e =>\r\n                            handleLink(\r\n                              e,\r\n                              ROUTES_CONSTANTS.BRAND.delete(item.uid)\r\n                            )\r\n                          }\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          {this.state.pagination.total > 0 && (\r\n            <PaginatorWidget\r\n              total={this.state.pagination.total}\r\n              current={this.state.pagination.activePage}\r\n              itemsPerPage={this.state.pagination.itemsPerPage}\r\n              onPageChanged={this.handlePagination}\r\n            />\r\n          )}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagement);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Row, Col, Container, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\n\r\nexport default class BrandManagementForm extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    saveEntity: PropTypes.func.isRequired,\r\n    item: PropTypes.object\r\n  };\r\n\r\n  state = {\r\n    item: {\r\n      name: \"\",\r\n      description: \"\",\r\n      companiesUID: \"\",\r\n      companiesName: \"\"\r\n    },\r\n    wordCount: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n    if (item) {\r\n      this.setState({ item });\r\n    }\r\n  }\r\n\r\n  changeHandler = event => {\r\n    let targetName = event.target.name;\r\n    let targetValue = event.target.value;\r\n    let wordCount = this.state.wordCount;\r\n\r\n    if (targetName === \"description\") {\r\n      let texto = targetValue;\r\n      let primerBlanco = /^ /;\r\n      let ultimoBlanco = / $/;\r\n      let variosBlancos = /[ ]+/g;\r\n      texto = texto.replace(variosBlancos, \" \");\r\n      texto = texto.replace(primerBlanco, \"\");\r\n      texto = texto.replace(ultimoBlanco, \"\");\r\n      wordCount = texto.split(\" \").length;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        [targetName]: targetValue\r\n      },\r\n      wordCount\r\n    });\r\n  };\r\n\r\n  changeCompaniesHandler = value => {\r\n    this.setState({\r\n      item: {\r\n        ...this.state.item,\r\n        companiesUID: value ? value.value : \"\",\r\n        companiesName: value ? value.label : \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // event.target.className = \"needs-validation\";\r\n    this.props.saveEntity(this.state.item);\r\n  };\r\n\r\n  render() {\r\n    const { companies } = this.props;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5 pb-2\">{this.props.title}</h2>\r\n        <Form\r\n          noValidate\r\n          onSubmit={this.handleSubmit}\r\n          validated={\"false\"}\r\n          className=\"pt-2 pb-5\"\r\n        >\r\n          <Row>\r\n            <Col md=\"10\" className=\"btn-back-container\">\r\n              <Button onClick={e => goBack(e)} className=\"btn-back\">\r\n                Back\r\n              </Button>\r\n            </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"name\">Compa&ntilde;ia</label>\r\n              <AutoComplete\r\n                isCreatable={false}\r\n                isMulti={false}\r\n                options={companies}\r\n                defaultLabel=\"name\"\r\n                defaultValue=\"uid\"\r\n                handleChange={this.changeCompaniesHandler}\r\n                selectedOptions={\r\n                  this.state.item\r\n                    ? [\r\n                        {\r\n                          uid: this.state.item.companiesUID,\r\n                          name: this.state.item.companiesName\r\n                        }\r\n                      ]\r\n                    : []\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"name\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={this.state.item.name}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </Col>\r\n            <Col md=\"10\" className=\"form-group\">\r\n              <label htmlFor=\"description\">Descripcion</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={this.state.item.description}\r\n                onChange={this.changeHandler}\r\n              />\r\n              <small className=\"form-text text-muted\">\r\n                Palabras: {this.state.wordCount}\r\n              </small>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"btn-success-container\">\r\n            <Button type=\"submit\" className=\"btn-save btn-success\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport BrandManagementForm from \"./brand-management-form\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass BrandManagementCreate extends Component {\r\n  state = {\r\n    companies: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    const companies = await firebase.getService(\"company\").getAll();\r\n\r\n    this.setState({ companies });\r\n  }\r\n\r\n  saveEntity = async item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let saveSuccess = await firebase\r\n      .getService(\"brand\")\r\n      .createItem(item, this.props.context.auth.user.id);\r\n\r\n    if (saveSuccess) {\r\n      history.push(ROUTES_CONSTANTS.BRAND.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrandManagementForm\r\n        title={\"Crear Marca\"}\r\n        saveEntity={this.saveEntity}\r\n        companies={this.state.companies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagementCreate);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass BrandManagementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n\r\n    let item = await firebase.getService(\"brand\").getItem(uid);\r\n    this.setState({\r\n      item,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"10\">\r\n            <h2 className=\"pt-5 pb-2\">Ver Marca</h2>\r\n          </Col>\r\n          <Col md=\"10\" className=\"btn-loading mb-1\">\r\n            {loading && <Loading />}\r\n            <Button onClick={e => goBack(e)} className=\"btn-back\">\r\n              Atras\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            <ListGroup>\r\n              <ListGroupItem className=\"d-flex justify-content-between\">\r\n                <span>\r\n                  <strong>Nombre:</strong>\r\n                </span>\r\n                {item && item.name}\r\n              </ListGroupItem>\r\n              <ListGroupItem className=\"d-flex justify-content-between\">\r\n                <span>\r\n                  <strong>Descripci&oacute;n:</strong>\r\n                </span>\r\n                {item && item.description}\r\n              </ListGroupItem>\r\n              <ListGroupItem className=\"d-flex justify-content-between\">\r\n                <span>\r\n                  <strong>Companias:</strong>\r\n                </span>\r\n                {item && item.companiesName}\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagementView);\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport BrandManagementForm from \"./brand-management-form\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass BrandManagementEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null,\r\n      companies: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n\r\n    let item = await firebase.getService(\"brand\").getItem(uid);\r\n    const companies = await firebase.getService(\"company\").getAll();\r\n    this.setState({\r\n      item,\r\n      loading: false,\r\n      companies\r\n    });\r\n  }\r\n\r\n  saveEntity = async item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    let updateSuccess = await firebase\r\n      .getService(\"brand\")\r\n      .updateItem(item, uid);\r\n\r\n    if (updateSuccess) {\r\n      history.push(ROUTES_CONSTANTS.BRAND.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <BrandManagementForm\r\n        title={\"Actualizar marca\"}\r\n        saveEntity={this.saveEntity}\r\n        item={this.state.item}\r\n        companies={this.state.companies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagementEdit);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass BrandManagementDelete extends Component {\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    let deleteSuccess = await firebase.getService(\"brand\").removeItem(uid);\r\n    if (deleteSuccess) {\r\n      history.push(ROUTES_CONSTANTS.BRAND.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal show={true} onHide={e => goBack(e)}>\r\n        <ModalHeader closeButton>Eliminar!!!</ModalHeader>\r\n        <ModalBody>Estas seguro que deseas eliminar este elemento? </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Eliminar\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(BrandManagementDelete);\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ErrorBoundaryRoute from \"../../../shared/error/error-boundary-route\";\r\nimport BrandManagement from \"./brand-management\";\r\nimport BrandManagementCreate from \"./brand-management-create\";\r\nimport BrandManagementView from \"./brand-management-view\";\r\nimport BrandManagementEdit from \"./brand-management-edit\";\r\nimport BrandManagementDelete from \"./brand-management-delete\";\r\n\r\nexport default function BrandRoutes({ match }) {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/edit/:id`}\r\n          component={BrandManagementEdit}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/create`}\r\n          component={BrandManagementCreate}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/view/:id`}\r\n          component={BrandManagementView}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}`}\r\n          component={BrandManagement}\r\n        />\r\n      </Switch>\r\n      <ErrorBoundaryRoute\r\n        path={`${match.url}/delete/:id`}\r\n        component={BrandManagementDelete}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container, Table, Button, Row, ButtonGroup } from \"reactstrap\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport Cursor from \"../../layouts/paginator/cursor\";\r\nimport PaginatorWidget from \"../../layouts/paginator\";\r\n\r\nclass ProductManagement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          loading: false,\r\n          items: {},\r\n          pagination: {\r\n            itemsPerPage: 2,\r\n            total: 0,\r\n            cursor: \"\",\r\n            activePage: 0\r\n          }\r\n        };\r\n    \r\n        this.getItems = this.props.context.firebase\r\n          .getService(\"product\")\r\n          .getRefAll();\r\n        this.cursor = new Cursor(\r\n          this.getItems.orderByChild(\"created\"),\r\n          this.state.pagination.itemsPerPage\r\n        );\r\n      }\r\n    \r\n      async componentDidMount() {\r\n        let total = await this.props.context.firebase\r\n          .getService(\"brand\")\r\n          .getCountAll();\r\n        this.setState({\r\n          ...this.state,\r\n          pagination: {\r\n            ...this.state.pagination,\r\n            total\r\n          }\r\n        });\r\n        this.moveForward();\r\n      }\r\n    \r\n      handlePagination = activePage => {\r\n        let isForward = this.state.pagination.activePage < activePage;\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            pagination: {\r\n              ...this.state.pagination,\r\n              activePage\r\n            }\r\n          },\r\n          () => this.sortEntities(isForward)\r\n        );\r\n      };\r\n    \r\n      sortEntities = isForward => {\r\n        if (isForward) {\r\n          this.moveForward();\r\n        } else {\r\n          this.moveBackward();\r\n        }\r\n      };\r\n    \r\n      moveForward = () => {\r\n        this.cursor.next().then(data => {\r\n          this.setState({\r\n            items: data\r\n          });\r\n        });\r\n      };\r\n    \r\n      moveBackward = () => {\r\n        this.cursor.previous().then(data => {\r\n          this.setState({\r\n            items: data\r\n          });\r\n        });\r\n      };\r\n    \r\n      componentWillUnmount() {\r\n        this.getItems.off();\r\n      }\r\n    \r\n      render() {\r\n        const { items, loading } = this.state;\r\n        return (\r\n          <Container>\r\n            <h2 className=\"pt-5\">Productos</h2>\r\n            {loading && <Loading />}\r\n    \r\n            <Row className=\"justify-content-end pb-1\">\r\n              <Button\r\n                className=\"btn-created\"\r\n                onClick={e => handleLink(e, ROUTES_CONSTANTS.PRODUCT.create())}\r\n              >\r\n                Crear\r\n              </Button>\r\n            </Row>\r\n            <div className=\"table-responsive\">\r\n              <Table striped bordered hover>\r\n                <thead className=\"table-head\">\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>C&oacute;digo</th>\r\n                    <th>Nombre</th>\r\n                    <th>Descripci&oacute;n corta</th>\r\n                    <th>Linea</th>\r\n                    <th>Marca</th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {items.length > 0 &&\r\n                    items.map((item, i) => (\r\n                      <tr key={item.uid}>\r\n                        <td>{i + 1}</td>\r\n                        <td>{item.code}</td>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.shortDescription}</td>\r\n                        <td>{item.productLineName}</td>\r\n                        <td>{item.brandName}</td>\r\n                        <td className=\"row-table-actions text-center\">\r\n                          <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button\r\n                              className=\"btn-view\"\r\n                              onClick={e =>\r\n                                handleLink(\r\n                                  e,\r\n                                  ROUTES_CONSTANTS.PRODUCT.view(item.uid)\r\n                                )\r\n                              }\r\n                            >\r\n                              View\r\n                            </Button>\r\n                            <Button\r\n                              className=\"btn-edit\"\r\n                              onClick={e =>\r\n                                handleLink(\r\n                                  e,\r\n                                  ROUTES_CONSTANTS.PRODUCT.edit(item.uid)\r\n                                )\r\n                              }\r\n                            >\r\n                              Edit\r\n                            </Button>\r\n                            <Button\r\n                              className=\"btn-delete\"\r\n                              onClick={e =>\r\n                                handleLink(\r\n                                  e,\r\n                                  ROUTES_CONSTANTS.PRODUCT.delete(item.uid)\r\n                                )\r\n                              }\r\n                            >\r\n                              Delete\r\n                            </Button>\r\n                            <Button\r\n                              className=\"btn-delete\"\r\n                              onClick={e =>\r\n                                handleLink(\r\n                                  e,\r\n                                  ROUTES_CONSTANTS.PRODUCT.html(item.uid)\r\n                                )\r\n                              }\r\n                            >\r\n                              Html\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </Table>\r\n    \r\n              {this.state.pagination.total > 0 && (\r\n                <PaginatorWidget\r\n                  total={this.state.pagination.total}\r\n                  current={this.state.pagination.activePage}\r\n                  itemsPerPage={this.state.pagination.itemsPerPage}\r\n                  onPageChanged={this.handlePagination}\r\n                />\r\n              )}\r\n            </div>\r\n          </Container>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default withSetting(ProductManagement)","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Button, Form, Row, Col } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport AutoComplete from \"../../layouts/autocomplete\";\r\nimport { getWordCount } from \"../../../shared/util/string-utils\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductManagementForm extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    saveEntity: PropTypes.func.isRequired,\r\n    item: PropTypes.object\r\n  };\r\n\r\n  state = {\r\n    loading: false,\r\n    item: {\r\n      code: \"\",\r\n      name: \"\",\r\n      shortDescription: \"\",\r\n      largeDescription: \"\",\r\n      htmlDescription: \"\",\r\n      productLineUID: \"\",\r\n      productLineName: \"\",\r\n      brandUID: \"\",\r\n      brandName: \"\"\r\n    },\r\n    wordCountShortDescription: 0,\r\n    wordCountLargeDescription: 0,\r\n    active: false,\r\n    productLines: [],\r\n    brands: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n    if (item) {\r\n      let wordCountShortDescription = this.state.wordCountShortDescription;\r\n      let wordCountLargeDescription = this.state.wordCountLargeDescription;\r\n\r\n      if (item.shortDescription) {\r\n        let texto = item.shortDescription;\r\n        wordCountShortDescription = getWordCount(texto);\r\n      }\r\n      if (item.largeDescription) {\r\n        let texto = item.largeDescription;\r\n        wordCountLargeDescription = getWordCount(texto);\r\n      }\r\n      this.setState({\r\n        ...this.state,\r\n        item,\r\n        wordCountShortDescription,\r\n        wordCountLargeDescription\r\n      });\r\n    }\r\n  }\r\n\r\n  changeHandler = event => {\r\n    let targetName = event.target.name;\r\n    let targetValue = event.target.value;\r\n    let wordCountShortDescription = this.state.wordCountShortDescription;\r\n    let wordCountLargeDescription = this.state.wordCountLargeDescription;\r\n\r\n    if (targetName === \"shortDescription\") {\r\n      let texto = targetValue;\r\n      wordCountShortDescription = getWordCount(texto);\r\n    } else if (targetName === \"largeDescription\") {\r\n      let texto = targetValue;\r\n      wordCountLargeDescription = getWordCount(texto);\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        [targetName]: targetValue\r\n      },\r\n      wordCountShortDescription,\r\n      wordCountLargeDescription\r\n    });\r\n  };\r\n\r\n  changeProductLineHandler = value => {\r\n    this.setState({\r\n      item: {\r\n        ...this.state.item,\r\n        productLineUID: value ? value.value : \"\",\r\n        productLineName: value ? value.label : \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  changeBrandHandler = value => {\r\n    this.setState({\r\n      item: {\r\n        ...this.state.item,\r\n        brandUID: value ? value.value : \"\",\r\n        brandName: value ? value.label : \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  changeCompaniesHandler = value => {\r\n    this.setState(\r\n      {\r\n        item: {\r\n          ...this.state.item,\r\n          companiesUID: value ? value.value : \"\",\r\n          companiesName: value ? value.label : \"\"\r\n        }\r\n      },\r\n      () => {\r\n        this.getProductLinesAndBrandsData();\r\n      }\r\n    );\r\n  };\r\n\r\n  getProductLinesAndBrandsData = async () => {\r\n    const { firebase } = this.props.context;\r\n    console.log(this.state.item.companiesUID);\r\n    const productLines = await firebase\r\n      .getService(\"productLine\")\r\n      .getAll({ orderByChild: 'companiesUID', equalTo: this.state.item.companiesUID });\r\n    const brands = await firebase\r\n      .getService(\"brand\")\r\n      .getAll({ orderByChild: 'companiesUID', equalTo: this.state.item.companiesUID });\r\n      console.log(brands)\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      productLines,\r\n      brands\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // event.target.className = \"needs-validation\";\r\n    this.props.saveEntity(this.state.item);\r\n  };\r\n\r\n  render() {\r\n    const { productLines, brands } = this.state;\r\n    const { companies } = this.props;\r\n    return (\r\n      <Container>\r\n        <h2 className=\"pt-5 pb-2\">{this.props.title}</h2>\r\n        <Form\r\n          noValidate\r\n          onSubmit={this.handleSubmit}\r\n          validated={\"false\"}\r\n          className=\"pt-2 pb-5\"\r\n        >\r\n          <Row>\r\n            <Col lg=\"10\" className=\"btn-back-container px-0\">\r\n              <Button onClick={e => goBack(e)} className=\"btn-back\">\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"10\" lg=\"10\" className=\"px-sm-0 pl-md-0 pr-md-1 col-info\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"company\">Compa&ntilde;&iacute;a</label>\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={companies}\r\n                  defaultLabel=\"name\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeCompaniesHandler}\r\n                  selectedOptions={\r\n                    this.state.item\r\n                      ? [\r\n                          {\r\n                            uid: this.state.item.companiesUID,\r\n                            name: this.state.item.companiesName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"6\" lg=\"5\" className=\"px-sm-0 pl-md-0 pr-md-1 col-info\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"productLine\">Linea de productos</label>\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={productLines}\r\n                  defaultLabel=\"name\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeProductLineHandler}\r\n                  selectedOptions={\r\n                    this.state.item\r\n                      ? [\r\n                          {\r\n                            uid: this.state.item.productLineUID,\r\n                            name: this.state.item.productLineName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\" lg=\"5\" className=\"px-sm-0 pr-md-0 pl-md-1 col-info\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"marca\">Marca</label>\r\n                <AutoComplete\r\n                  isCreatable={false}\r\n                  isMulti={false}\r\n                  options={brands}\r\n                  defaultLabel=\"name\"\r\n                  defaultValue=\"uid\"\r\n                  handleChange={this.changeBrandHandler}\r\n                  selectedOptions={\r\n                    this.state.item\r\n                      ? [\r\n                          {\r\n                            uid: this.state.item.brandUID,\r\n                            name: this.state.item.brandName\r\n                          }\r\n                        ]\r\n                      : []\r\n                  }\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"6\" lg=\"5\" className=\"px-sm-0 pl-md-0 pr-md-1 col-info\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">C&oacute;digo</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"code\"\r\n                  value={this.state.item.code}\r\n                  onChange={this.changeHandler}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\" lg=\"5\" className=\"px-sm-0 pl-md-1 pr-md-0 col-info\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={this.state.item.name}\r\n                  onChange={this.changeHandler}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg=\"10\" className=\"form-group col-info\">\r\n              <label htmlFor=\"shortDescription\">Descripci&oacute;n corta</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"shortDescription\"\r\n                value={this.state.item.shortDescription}\r\n                onChange={this.changeHandler}\r\n              />\r\n              <small className=\"form-text text-muted\">\r\n                Palabras: {this.state.wordCount}\r\n              </small>\r\n            </Col>\r\n            <Col lg=\"10\" className=\"form-group col-info\">\r\n              <label htmlFor=\"description\">Descripci&oacute;n larga</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"largeDescription\"\r\n                value={this.state.item.largeDescription}\r\n                onChange={this.changeHandler}\r\n              />\r\n              <small className=\"form-text text-muted\">\r\n                Palabras: {this.state.wordCount}\r\n              </small>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"btn-success-container\">\r\n            <Button type=\"submit\" className=\"btn-save btn-success\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementForm);\r\n","import React, { Component } from \"react\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport ProductManagementForm from \"./product-management-form\";\r\nimport history from \"../../../config/history\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductManagementCreate extends Component {\r\n  state = {\r\n    companies: []\r\n  };\r\n\r\n  saveEntity = async item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let saveSuccess = await firebase\r\n      .getService(\"product\")\r\n      .createItem(item, this.props.context.auth.user.id);\r\n\r\n    if (saveSuccess) {\r\n      history.push(ROUTES_CONSTANTS.PRODUCT.index());\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    const companies = await firebase.getService(\"company\").getAll();\r\n\r\n    this.setState({ companies });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ProductManagementForm\r\n        title={\"Crear Producto\"}\r\n        saveEntity={this.saveEntity}\r\n        companies={this.state.companies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementCreate);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Button, ListGroup, ListGroupItem, Row, Col } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductManagementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n\r\n    this.getItem = this.props.context.firebase.product;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n\r\n    let item = await firebase.getService(\"product\").getItem(uid);\r\n    this.setState({\r\n      item,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"10\">\r\n            <h2 className=\"pt-5 pb-2\">Ver Producto</h2>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            {loading && <Loading />}\r\n            <Button onClick={e => goBack(e)} className=\"btn-back\">Atras</Button>\r\n          </Col>\r\n          <Col md=\"10\">\r\n              <ListGroup>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Codigo:</strong>\r\n                  </span>\r\n                  {item && item.code}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Nombre:</strong>\r\n                  </span>\r\n                  {item && item.name}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Descripci&oacute;n corta:</strong>\r\n                  </span>\r\n                  {item && item.shortDescription}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Descripci&oacute;n larga:</strong>\r\n                  </span>\r\n                  {item && item.largeDescription}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Linea de producto:</strong>\r\n                  </span>\r\n                  {item && item.productLineName}\r\n                </ListGroupItem>\r\n                <ListGroupItem className=\"d-flex justify-content-between\">\r\n                  <span>\r\n                    <strong>Marca:</strong>\r\n                  </span>\r\n                  {item && item.brandName}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementView);\r\n","import React, { Component } from \"react\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport ProductManagementForm from \"./product-management-form\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductManagementEdit extends Component {\r\n  state = {\r\n    product: null,\r\n    companies: []\r\n  };\r\n\r\n  saveEntity = async item => {\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    let updateSuccess = await firebase\r\n      .getService(\"product\")\r\n      .updateItem(item, uid);\r\n\r\n    if (updateSuccess) {\r\n      history.push(ROUTES_CONSTANTS.PRODUCT.index());\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    let uid = this.props.match.params.id;\r\n    const product = await firebase.getService(\"product\").getItem(uid);\r\n    const companies = await firebase.getService(\"company\").getAll();\r\n\r\n    this.setState({ companies, product });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.product && (\r\n        <ProductManagementForm\r\n          title={\"Actualizar Producto\"}\r\n          saveEntity={this.saveEntity}\r\n          item={this.state.product}\r\n          companies={this.state.companies}\r\n        />\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementEdit);\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { withSetting } from \"../../../shared/context\";\r\n\r\nclass ProductManagementDelete extends Component {\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props.context;\r\n\r\n    let uid = this.props.match.params.id;\r\n\r\n    let deleteSuccess = await firebase.getService(\"product\").removeItem(uid);\r\n    if (deleteSuccess) {\r\n      history.push(ROUTES_CONSTANTS.BRAND.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal show={true} onHide={e => goBack(e)}>\r\n        <ModalHeader closeButton>Eliminar!!!</ModalHeader>\r\n        <ModalBody>Estas seguro que deseas eliminar este elemento? </ModalBody>\r\n        <ModalFooter>\r\n          <Button variant=\"secondary\" onClick={e => goBack(e)}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Eliminar\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementDelete);\r\n","import React, { Component } from \"react\";\r\nimport CKEditor from \"react-ckeditor-component\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class CKEditorWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    html: PropTypes.string,\r\n    short: PropTypes.string.isRequired,\r\n    large: PropTypes.string.isRequired,\r\n    changeHandler: PropTypes.func.isRequired\r\n  };\r\n\r\n  onChange = evt => {\r\n    // console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({ content: newContent });\r\n    this.props.changeHandler(newContent);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let newContent = \"\";\r\n    if (this.props.html.length > 0) {\r\n      newContent = this.props.html;\r\n    } else {\r\n      newContent = `\r\n    ${this.props.short} <br/>\r\n    ${this.props.large} <br/>   \r\n    `;\r\n    }\r\n\r\n    this.setState(\r\n      { content: newContent },\r\n      this.props.changeHandler(newContent)\r\n    );\r\n  }\r\n\r\n  // onBlur = (evt) => {\r\n  //   console.log(\"onBlur event called with event info: \", evt);\r\n  // }\r\n\r\n  // afterPaste = (evt) => {\r\n  //   console.log(\"afterPaste event called with event info: \", evt);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <CKEditor\r\n        activeClass=\"p10\"\r\n        content={this.state.content}\r\n        events={{\r\n          // blur: this.onBlur,\r\n          // afterPaste: this.afterPaste,\r\n          change: this.onChange\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withSetting } from \"../../../shared/context\";\r\nimport Loading from \"../../layouts/loading\";\r\nimport { goBack } from \"../../../shared/util/link-utils\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport CKEditorWidget from \"../../layouts/ckeditor\";\r\nimport moment from \"moment\";\r\nimport history from \"../../../config/history\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\n\r\nclass ProductManagementHtml extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      item: null\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { firebase } = this.props.context;\r\n    this.setState({ loading: true });\r\n    let uid = this.props.match.params.id;\r\n    const item = await firebase.getService(\"product\").getItem(uid);\r\n    this.setState({\r\n      item,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  changeHandler = content => {\r\n    this.setState({\r\n      ...this.state,\r\n      item: {\r\n        ...this.state.item,\r\n        htmlDescription: content\r\n      }\r\n    });\r\n  };\r\n\r\n  saveHtmlContent = async () => {\r\n    const { firebase } = this.props.context;\r\n    const { item } = this.state;\r\n    let uid = this.props.match.params.id;\r\n\r\n    let updateSuccess = await firebase\r\n      .getService(\"product\")\r\n      .updateItem(item, uid);\r\n\r\n    if (updateSuccess) {\r\n      history.push(ROUTES_CONSTANTS.PRODUCT.index());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"10\">\r\n            <h2 className=\"pt-5 pb-2\">Ver Producto</h2>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            {loading && <Loading />}\r\n            <Button onClick={e => goBack(e)} className=\"btn-back\">\r\n              Atras\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"10\">\r\n            <h2>Producto: {item && item.name}</h2>\r\n          </Col>\r\n          <Col md=\"12\">\r\n            {item && (\r\n              <CKEditorWidget\r\n                html={item.htmlDescription}\r\n                short={item.shortDescription}\r\n                large={item.largeDescription}\r\n                changeHandler={this.changeHandler}\r\n              />\r\n            )}\r\n          </Col>\r\n          <Col md=\"10\">\r\n            <Button onClick={this.saveHtmlContent} className=\"btn btn-warning\">\r\n              Guardar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(ProductManagementHtml);\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ErrorBoundaryRoute from \"../../../shared/error/error-boundary-route\";\r\nimport ProductManagement from \"./product-management\";\r\nimport ProductManagementCreate from \"./product-management-create\";\r\nimport ProductManagementView from \"./product-management-view\";\r\nimport ProductManagementEdit from \"./product-management-edit\";\r\nimport ProductManagementDelete from \"./product-management-delete\";\r\nimport ProductManagementHtml from \"./product-management-html\";\r\n\r\nexport default function ProductRoutes({ match }) {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/edit/:id`}\r\n          component={ProductManagementEdit}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/create`}\r\n          component={ProductManagementCreate}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/view/:id`}\r\n          component={ProductManagementView}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}/html/:id`}\r\n          component={ProductManagementHtml}\r\n        />\r\n        <ErrorBoundaryRoute\r\n          path={`${match.url}`}\r\n          component={ProductManagement}\r\n        />\r\n      </Switch>\r\n      <ErrorBoundaryRoute\r\n        path={`${match.url}/delete/:id`}\r\n        component={ProductManagementDelete}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ErrorBoundaryRoute from \"./shared/error/error-boundary-route\";\r\nimport { ROUTES_CONSTANTS } from \"./config/routes-constants\";\r\n\r\nimport Home from \"./modules/general/home\";\r\nimport PageNotFound from \"./shared/error/page-not-found\";\r\nimport LoginPage from \"./modules/general/login\";\r\nimport CompanyRoutes from \"./modules/admin/company-management\";\r\nimport ProductLinesRoutes from \"./modules/admin/product-line-management\";\r\nimport BrandRoutes from \"./modules/admin/brand-management\";\r\nimport ProductRoutes from \"./modules/admin/product\";\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.HOME}\r\n            exact\r\n            component={Home}\r\n          />\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.AUTH.LOGIN}\r\n            component={LoginPage}\r\n          />\r\n\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.COMPANY.index()}\r\n            component={CompanyRoutes}\r\n          />\r\n\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.PRODUCT_LINE.index()}\r\n            component={ProductLinesRoutes}\r\n          />\r\n\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.BRAND.index()}\r\n            component={BrandRoutes}\r\n          />\r\n\r\n          <ErrorBoundaryRoute\r\n            path={ROUTES_CONSTANTS.PRODUCT.index()}\r\n            component={ProductRoutes}\r\n          />\r\n\r\n          <ErrorBoundaryRoute component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavLink,} from \"reactstrap\";\r\nimport { ROUTES_CONSTANTS } from \"../../../config/routes-constants\";\r\nimport { handleLink } from \"../../../shared/util/link-utils\";\r\nimport \"../../../index.css\"\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n  render() {\r\n    const { isAuthenticated } = this.props;\r\n    console.log(isAuthenticated)\r\n    if (!isAuthenticated) return null;\r\n    const homeRoute = ROUTES_CONSTANTS.HOME;\r\n    const companiesRoute = ROUTES_CONSTANTS.COMPANY.index();\r\n    const productLinesRoute = ROUTES_CONSTANTS.PRODUCT_LINE.index();\r\n    const brandRoute = ROUTES_CONSTANTS.BRAND.index();\r\n    const productRoute = ROUTES_CONSTANTS.PRODUCT.index();\r\n    return (\r\n      <Navbar fixed=\"top\" className=\"navbar fixed-top bg-white text-dark text-uppercase navbar-home\" expand=\"lg\">\r\n        <NavbarBrand href={homeRoute} onClick={e => handleLink(e, homeRoute)}>\r\n          Writter App Management\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={this.toggle} >\r\n            <div className=\"item-toggler\"/>\r\n            <div className=\"item-toggler\"/>\r\n            <div className=\"item-toggler\"/>\r\n        </NavbarToggler>\r\n        <Collapse id=\"basic-navbar-nav\" isOpen={this.state.isOpen} navbar >\r\n          <Nav className=\"nav-header\" navbar>\r\n            <NavLink href={homeRoute} onClick={e => handleLink(e, homeRoute)}>\r\n              Home\r\n            </NavLink>\r\n            <NavLink\r\n              href={companiesRoute}\r\n              onClick={e => handleLink(e, companiesRoute)}\r\n            >\r\n              Compa&ntilde;ias\r\n            </NavLink>\r\n            <NavLink\r\n              href={productLinesRoute}\r\n              onClick={e => handleLink(e, productLinesRoute)}\r\n            >\r\n              Linea de productos\r\n            </NavLink>\r\n            <NavLink\r\n              href={brandRoute}\r\n              onClick={e => handleLink(e, brandRoute)}\r\n            >\r\n              Marca\r\n            </NavLink>\r\n            <NavLink\r\n              href={productRoute}\r\n              onClick={e => handleLink(e, productRoute)}\r\n            >\r\n              Productos\r\n            </NavLink>\r\n            <NavLink //Poner a la derecha\r\n              href=\"/logout\"\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                this.props.logout();\r\n              }}\r\n            >\r\n              Cerrar sessi&oacute;n\r\n            </NavLink>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../../../index.css\"\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        const {isAuthenticated} = this.props;\r\n        console.log(isAuthenticated)\r\n\r\n        return(\r\n            <div>\r\n                <footer className=\"footer\">\r\n                    <span> WAM © 2020, Writter Application Management </span>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport history from \"./config/history\";\r\nimport Routes from \"./routes\";\r\nimport Header from \"./modules/layouts/header\";\r\nimport Footer from \"./modules/layouts/footer\";\r\nimport { ROUTES_CONSTANTS } from \"./config/routes-constants\";\r\nimport { withSetting } from \"./shared/context\";\r\nimport { isAdmin, ROLES } from \"./shared/session/auth-data\";\r\n//import CKEditorWidget from \"./modules/layouts/ckeditor\";\r\n\r\nclass App extends Component {\r\n  componentDidMount = () => {\r\n    this.props.context.firebase.auth.onAuthStateChanged(authUser => {\r\n      if( !authUser) return;\r\n      const user = {\r\n        username: authUser.displayName,\r\n        email: authUser.email,\r\n        id: authUser.uid,\r\n        roles: isAdmin(authUser.email) ? ROLES.ADMIN : ROLES.WRITTER\r\n      };\r\n      this.props.context.auth.setUser(user);\r\n      this.forceUpdate();\r\n    });\r\n  };\r\n\r\n  logoutWithGoogle = () => {\r\n    this.props.context.firebase.logout().then(() => {\r\n      this.props.context.auth.setUser(null);\r\n      this.forceUpdate();\r\n      history.push(ROUTES_CONSTANTS.AUTH.LOGIN);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.props.context.auth;\r\n    console.log(this.props.context);\r\n    console.log(\"isAuthenticated\");\r\n    console.log(isAuthenticated);\r\n    return (\r\n      <>\r\n        <Container fluid style={{ paddingTop: \"60px\" }} className=\"app\">\r\n          <Router history={history}>\r\n            <>\r\n              <Header\r\n                isAuthenticated={isAuthenticated}\r\n                logout={this.logoutWithGoogle}\r\n              />\r\n              <Routes isAuthenticated={isAuthenticated} />\r\n            </>\r\n          </Router>\r\n        </Container>\r\n        <Footer isAuthenticated={true} logout={this.logoutWithGoogle} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSetting(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport SettingProvider from \"./shared/context\";\r\n\r\n// import Firebase, { FirebaseContext } from \"./shared/firebase\";\r\n\r\n\r\nReactDOM.render(\r\n  <SettingProvider>\r\n    <App />\r\n  </SettingProvider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}